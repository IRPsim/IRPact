plugins {
    id 'java'
    id 'eclipse'
}

group 'de.unileipzig.irpact'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    //geotools als erstes, sonst werden libs nicht gefunden...
    maven { url "https://repo.osgeo.org/repository/release/" }
    maven { url "http://download.java.net/maven/2" }

    maven { url "https://nexus.actoron.com/content/repositories/oss-nightlies" }

    mavenCentral()
    jcenter()
}

test {
    useJUnitPlatform()
}

//==================================================
//dependencies
//==================================================

ext {
    junitJupiterVersion = '5.4.2'
    junitPlatformVersion = '1.4.2'
    jacksonVersion = '2.10.2'
    picocliVersion = '4.2.0'
    jadexDistVersion = '4.0.187' //'4.0.171'
    sl4jVersion = '1.7.30'
    logbackVersion = '1.2.3'
    geotoolsVersion = '23.2'
    ednjavaVersion = '0.6.0'
}

dependencies {
    testCompileOnly "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    runtimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    runtimeOnly "org.junit.vintage:junit-vintage-engine:$junitJupiterVersion"
    runtimeOnly "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
    testCompileOnly "org.apiguardian:apiguardian-api:1.0.0"

    //implementation "org.activecomponents.jadex:jadex-distribution-standard:$jadexDistVersion"
    implementation "org.activecomponents.jadex:jadex-distribution-minimal:$jadexDistVersion"
    implementation "org.activecomponents.jadex:jadex-kernel-bdiv3:$jadexDistVersion"

    implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"

    implementation "info.picocli:picocli:$picocliVersion"

    implementation "org.slf4j:slf4j-api:$sl4jVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    implementation "ch.qos.logback:logback-core:$logbackVersion"

    implementation "org.geotools:gt-shapefile:$geotoolsVersion"

    implementation "us.bpsm:edn-java:$ednjavaVersion"

    //custom
    implementation files('customlibs/IRPtools-1.0-SNAPSHOT.jar')
}

//==================================================
//jar
//==================================================

// Invalid signature file digest for Manifest main attributes -> fatjar geht (erstmal?) nicht (Problem bleibt mit shadow bestehen)
// einfach die key files entfernen...
task buildUberJar(type: Jar) {
    archiveClassifier.set('uber')
    manifest {
        attributes 'Main-class': 'de.unileipzig.irpact.start.Start'
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } with jar
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

task buildStandardJar(type: Jar) {
    from sourceSets.main.output
    manifest {
        attributes 'Main-class': 'de.unileipzig.irpact.start.Start'
    }
}

artifacts {
    archives buildUberJar
    archives buildStandardJar
}

/*
task buildDemoJarWithClasspath(type: Jar) {
    archiveAppendix.set('demo')
    from sourceSets.main.output
    manifest {
        attributes 'Main-class': 'de.unileipzig.irpact.start.Start'
        attributes 'Class-Path': configurations.runtimeClasspath.files.collect { "dependencies/$it.name" }.join(' ')
    }
}

task buildDemoJarWithClasspathSameDir(type: Jar) {
    archiveAppendix.set('demo')
    archiveClassifier.set('v2')
    from sourceSets.main.output
    manifest {
        attributes 'Main-class': 'de.unileipzig.irpact.start.Start'
        attributes 'Class-Path': configurations.runtimeClasspath.files.collect { "$it.name" }.join(' ')
    }
}

task buildDemoJarWithoutClasspath(type: Jar) {
    archiveAppendix.set('demo')
    archiveClassifier.set('nocp')
    from sourceSets.main.output
    manifest {
        attributes 'Main-class': 'de.unileipzig.irpact.start.Start'
    }
}

task copyDependencies(type: Copy) {
    into "$buildDir/dependencies"
    from configurations.runtimeClasspath
}

artifacts {
    archives buildDemoFatJar
    archives buildDemoJarWithClasspath
    archives buildDemoJarWithClasspathSameDir
    archives buildDemoJarWithoutClasspath
}
*/
