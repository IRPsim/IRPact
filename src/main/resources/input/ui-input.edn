[
  {
    :label "[TEST] Graph - Modulares Prozessmodell" 
    :icon "fas fa-share-alt" 
    :description "[TEST] Interaktiver Graph fuer das modulare Prozessmodell." 
    :graph {
      :edges {
        :tags [["graphedge"]] 
        :groups [
          {
            :tags [["InAddModule" "first"] ["InAddModule" "second"] ["InLogisticModule" "input"] ["InSumModule" "first"] ["InWeightedAddModule" "first"] ["InWeightedAddModule" "second"] ["InWeightedModule" "input"] ["InSumThresholdEvaluationModule" "input"] ["InThresholdEvaluationModule" "input"]] 
            :label "Berechnungskante" 
            :color "DarkCyan"
          } 
          {
            :tags [["InBranchModule" "inputModule"] ["InBranchModule" "onAdoptModule"] ["InBranchModule" "onImpededModule"] ["InBranchModule" "onInProcessModule"] ["InDoNothingModule" "inputModule"] ["InFilterModule" "inputModule"] ["InFilterModule" "taskModule"] ["InStageEvaluationModule" "awarenessModule"] ["InStageEvaluationModule" "feasibilityModule"] ["InStageEvaluationModule" "decisionMakingModule"] ["InStageEvaluationModule" "adoptedModule"] ["InStageEvaluationModule" "impededModule"]] 
            :label "Evaluierungskante" 
            :color "LightSlateGrey"
          }
        ] 
        :heading "Kantenbedeutung"
      } 
      :nodes {
        :set "set_InConsumerAgentModule" 
        :color {
          :type :subsets 
          :groups [
            {
              :tags [["calcgraphnode"]] 
              :label "Berechnungsmodul" 
              :value "Blue"
            } 
            {
              :tags [["inputgraphnode"]] 
              :label "Eingabemodul" 
              :value "Green"
            } 
            {
              :tags [["evalgraphnode"]] 
              :label "Evaluierungsmodul" 
              :value "Red"
            }
          ] 
          :heading "Fuellfarbe"
        } 
        :border {
          :type :subsets 
          :groups [
            {
              :tags [["calcgraphnode"]] 
              :label "Berechnungsmodul" 
              :value "Blue"
            } 
            {
              :tags [["inputgraphnode"]] 
              :label "Eingabemodul" 
              :value "Green"
            } 
            {
              :tags [["evalgraphnode"]] 
              :label "Evaluierungsmodul" 
              :value "Red"
            }
          ] 
          :heading "Rahmenfarbe"
        } 
        :shape {
          :type :subsets 
          :groups [
            {
              :tags [["calcgraphnode"]] 
              :label "Berechnungsmodul" 
              :value "gear"
            } 
            {
              :tags [["inputgraphnode"]] 
              :label "Eingabemodul" 
              :value "square"
            } 
            {
              :tags [["evalgraphnode"]] 
              :label "Evaluierungsmodul" 
              :value "diamond"
            }
          ] 
          :heading "Form"
        }
      }
    }
  } 
  {
    :label "[TEST] Graph - Modulares Prozessmodell v3" 
    :icon "fas fa-share-alt" 
    :description "[TEST] Interaktiver Graph fuer das modulare Prozessmodell." 
    :graph {
      :edges {
        :tags [["graphedge2"]] 
        :groups [
          {
            :tags [["InIfElseActionModule" "test"] ["InStopAfterSuccessfulTaskModule" "input"] ["InIfDoActionModule" "ifInput"] ["InDecisionMakingDeciderModule2" "finCheck"]] 
            :label "Entscheidungskante" 
            :color "LightSlateGrey"
          } 
          {
            :tags [["InIfElseActionModule" "onTrue"] ["InIfElseActionModule" "onFalse"] ["InIfDoActionModule" "taskInput"]] 
            :label "Aktionskante" 
            :color "DarkCyan"
          } 
          {
            :tags [["InThresholdReachedModule" "draw"] ["InThresholdReachedModule" "threshold"] ["InBernoulliModule" "input"] ["InAddScalarModule" "input"] ["InLogisticModule" "xinput"] ["InLogisticModule" "x0input"] ["InMulScalarModule" "input"] ["InProductModule" "input"] ["InSumModule" "input"] ["InCsvValueLoggingModule" "input"] ["InMinimalCsvValueLoggingModule" "input"] ["InDecisionMakingDeciderModule2" "threshold"] ["InDecisionMakingDeciderModule2" "utility"]] 
            :label "Berechnungskante" 
            :color "Green"
          } 
          {
            :tags [["InRunUntilFailureModule" "input"] ["InReevaluatorModule" "input"]] 
            :label "Planauswertungskante" 
            :color "Blue"
          } 
          {
            :tags [["InDoAdoptModule" "input"] ["InFeasibilityModule" "input"] ["InInterestModule" "input"] ["InMainBranchingModule" "init"] ["InMainBranchingModule" "awareness"] ["InMainBranchingModule" "feasibility"] ["InMainBranchingModule" "decision"] ["InMainBranchingModule" "adopted"] ["InMainBranchingModule" "impeded"] ["InPhaseUpdateModule" "input"] ["InYearBasedAdoptionDeciderModule" "input"] ["InPhaseLoggingModule" "input"]] 
            :label "PVact-Auswerungskante" 
            :color "#7012FE"
          }
        ] 
        :heading "Kantenbedeutung"
      } 
      :nodes {
        :set "set_InModule2" 
        :color {
          :type :subsets 
          :groups [
            {
              :tags [["actiongraphnode2"]] 
              :label "Aktionsmodul" 
              :value "DarkCyan"
            } 
            {
              :tags [["boolgraphnode2"]] 
              :label "Entscheidungsmodul" 
              :value "LightSlateGrey"
            } 
            {
              :tags [["calcgraphnode2"]] 
              :label "Berechnungsmodul" 
              :value "Green"
            } 
            {
              :tags [["inputgraphnode2"]] 
              :label "Eingabemodul" 
              :value "#CAFE12"
            } 
            {
              :tags [["calcloggraphnode2"]] 
              :label "Loggingmodul" 
              :value "#FEAF12"
            } 
            {
              :tags [["evalgraphnode2"]] 
              :label "Planauswertungsmodul" 
              :value "Blue"
            } 
            {
              :tags [["evalragraphnode2"]] 
              :label "PVact-Auswerungsmodul" 
              :value "#7012FE"
            } 
            {
              :tags [["reevalgraphnode2"]] 
              :label "Evaluierungsmodul" 
              :value "Magenta"
            }
          ] 
          :heading "Fuellfarbe"
        } 
        :border {
          :type :subsets 
          :groups [
            {
              :tags [["actiongraphnode2"]] 
              :label "Aktionsmodul" 
              :value "DarkCyan"
            } 
            {
              :tags [["boolgraphnode2"]] 
              :label "Entscheidungsmodul" 
              :value "LightSlateGrey"
            } 
            {
              :tags [["calcgraphnode2"]] 
              :label "Berechnungsmodul" 
              :value "Green"
            } 
            {
              :tags [["inputgraphnode2"]] 
              :label "Eingabemodul" 
              :value "#CAFE12"
            } 
            {
              :tags [["calcloggraphnode2"]] 
              :label "Loggingmodul" 
              :value "#FEAF12"
            } 
            {
              :tags [["evalgraphnode2"]] 
              :label "Planauswertungsmodul" 
              :value "Blue"
            } 
            {
              :tags [["evalragraphnode2"]] 
              :label "PVact-Auswerungsmodul" 
              :value "#7012FE"
            } 
            {
              :tags [["reevalgraphnode2"]] 
              :label "Evaluierungsmodul" 
              :value "Magenta"
            }
          ] 
          :heading "Rahmenfarbe"
        } 
        :shape {
          :type :subsets 
          :groups [
            {
              :tags [["actiongraphnode2"]] 
              :label "Aktionsmodul" 
              :value "octagon"
            } 
            {
              :tags [["boolgraphnode2"]] 
              :label "Entscheidungsmodul" 
              :value "gear"
            } 
            {
              :tags [["calcgraphnode2"]] 
              :label "Berechnungsmodul" 
              :value "square"
            } 
            {
              :tags [["inputgraphnode2"]] 
              :label "Eingabemodul" 
              :value "flower"
            } 
            {
              :tags [["calcloggraphnode2"]] 
              :label "Loggingmodul" 
              :value "diamond"
            } 
            {
              :tags [["evalgraphnode2"]] 
              :label "Planauswertungsmodul" 
              :value "pentagon"
            } 
            {
              :tags [["evalragraphnode2"]] 
              :label "PVact-Auswerungsmodul" 
              :value "circle"
            } 
            {
              :tags [["reevalgraphnode2"]] 
              :label "Evaluierungsmodul" 
              :value "triangle-down"
            }
          ] 
          :heading "Form"
        }
      }
    }
  } 
  {
    :label "Agentennetzwerk" 
    :icon "fa fa-spinner" 
    :description "Agentennetzwerk in IRPact" 
    :image "agentGraph"
  } 
  {
    :label "Informationen" 
    :description "Informationen über IRPact und das Szenario" 
    :sections [
      {
        :label "Über IRPact" 
        :set "set_InIRPactVersion" 
        :description "IRPact v1.19.2" 
        :tags [["InIRPactVersion" "placeholder"]]
      } 
      {
        :label "Über das Szenario" 
        :set "set_InScenarioVersion" 
        :description "Die Version von IRPact, für welche das Szenario erstellt wurde." 
        :tags [["InScenarioVersion" "placeholder"]]
      } 
      {
        :label "Weitere Informationen" 
        :set "set_InInformation" 
        :description "Weitere Informationen über das Szenario." 
        :tags [["InInformation" "placeholder"]]
      }
    ]
  } 
  {
    :label "Einstellungen" 
    :description "Einstellungen von IRPact" 
    :sections [
      {
        :label "Allgemeine Einstellungen" 
        :description "Allgemeine Einstellungen von IRPact" 
        :tags [["InGeneral" "seed"] ["InGeneral" "timeout"] ["InGeneral" "timeoutUseMs"] ["InGeneral" "timeoutUseSec"] ["InGeneral" "timeoutUseMin"] ["InGeneral" "lastSimulationYear"] ["InGeneral" "logScriptAdoptionsZip"] ["InGeneral" "logScriptAdoptionsZipPhase"]] 
        :sections [
          {
            :label "Logging" 
            :description "Einstellungen für das Logging." 
            :tags [["InGeneral" "levelOff"] ["InGeneral" "levelTrace"] ["InGeneral" "levelDebug"] ["InGeneral" "levelInfo"] ["InGeneral" "levelWarn"] ["InGeneral" "levelError"] ["InGeneral" "levelAll"] ["InGeneral" "logAll"] ["InGeneral" "logAllIRPact"] ["InGeneral" "logAllTools"] ["InGeneral" "logInitialization"] ["InGeneral" "logSimulation"]]
          }
        ]
      } 
      {
        :label "Spezielle Einstellungen" 
        :description "Hier lassen sich spezielle Modi aktivieren." 
        :tags [["InGeneral" "runPVAct"] ["InGeneral" "runOptActDemo"] ["InGeneral" "runMode"] ["InGeneral" "scenarioMode"] ["InGeneral" "passErrorMessageToOutput"] ["InGeneral" "printStacktraceImage"] ["InGeneral" "printNoErrorImage"] ["InGeneral" "copyLogIfPossible"] ["InGeneral" "skipPersist"] ["InGeneral" "forceLogToConsole"] ["InGeneral" "debugTask"] ["InGeneral" "outerParallelism"] ["InGeneral" "innerParallelism"]] 
        :sections [
          {
            :label "Binäre Daten" 
            :set "set_VisibleBinaryData" 
            :tags [["VisibleBinaryData" "idVisible"]]
          }
        ]
      } 
      {
        :label "Datenanalyse" 
        :description "todo" 
        :sections [
          {
            :label "BucketAnalyser" 
            :set "set_InBucketAnalyser" 
            :description "todo" 
            :tags [["InBucketAnalyser" "enabled"] ["InBucketAnalyser" "storeCsv"] ["InBucketAnalyser" "storeXlsx"] ["InBucketAnalyser" "bucketRange"] ["link" "InBucketAnalyser" "InConsumerAgentCalculationLoggingModule2" "loggingModule"]]
          }
        ]
      } 
      {
        :label "Ergebnisvisualisierung" 
        :description "todo" 
        :sections [
          {
            :label "Benutzerdefinierte Quantilanalyse" 
            :set "set_InCustomAverageQuantilRangeImage" 
            :description "todo" 
            :tags [["InCustomAverageQuantilRangeImage" "enabled"] ["InCustomAverageQuantilRangeImage" "useGnuplot"] ["InCustomAverageQuantilRangeImage" "useR"] ["InCustomAverageQuantilRangeImage" "storeScript"] ["InCustomAverageQuantilRangeImage" "storeData"] ["InCustomAverageQuantilRangeImage" "storeImage"] ["InCustomAverageQuantilRangeImage" "printAverage"] ["InCustomAverageQuantilRangeImage" "imageWidth"] ["InCustomAverageQuantilRangeImage" "imageHeight"] ["InCustomAverageQuantilRangeImage" "linewidth"] ["InCustomAverageQuantilRangeImage" "customImageId"] ["link" "InCustomAverageQuantilRangeImage" "InQuantileRange" "ranges"] ["link" "InCustomAverageQuantilRangeImage" "InConsumerAgentCalculationLoggingModule2" "loggingModules"]] 
            :sections [
              {
                :label "Quantilbereich" 
                :set "set_InQuantileRange" 
                :description "todo" 
                :tags [["InQuantileRange" "lowerBound"] ["InQuantileRange" "upperBound"]]
              }
            ]
          } 
          {
            :label "Spezielle Quantilbereiche" 
            :set "set_InSpecialAverageQuantilRangeImage" 
            :description "todo" 
            :tags [["InSpecialAverageQuantilRangeImage" "enabled"] ["InSpecialAverageQuantilRangeImage" "useGnuplot"] ["InSpecialAverageQuantilRangeImage" "useR"] ["InSpecialAverageQuantilRangeImage" "storeScript"] ["InSpecialAverageQuantilRangeImage" "storeData"] ["InSpecialAverageQuantilRangeImage" "storeImage"] ["InSpecialAverageQuantilRangeImage" "printAverage"] ["InSpecialAverageQuantilRangeImage" "imageWidth"] ["InSpecialAverageQuantilRangeImage" "imageHeight"] ["InSpecialAverageQuantilRangeImage" "linewidth"] ["InSpecialAverageQuantilRangeImage" "customImageId"] ["link" "InSpecialAverageQuantilRangeImage" "InConsumerAgentCalculationLoggingModule2" "loggingModules"]]
          } 
          {
            :label "Adoptionen mit Realdaten" 
            :set "set_InComparedAnnualImage" 
            :description "todo" 
            :tags [["InComparedAnnualImage" "enabled"] ["InComparedAnnualImage" "useGnuplot"] ["InComparedAnnualImage" "useR"] ["InComparedAnnualImage" "storeScript"] ["InComparedAnnualImage" "storeData"] ["InComparedAnnualImage" "storeImage"] ["InComparedAnnualImage" "imageWidth"] ["InComparedAnnualImage" "imageHeight"] ["InComparedAnnualImage" "linewidth"] ["InComparedAnnualImage" "skipInvalidZips"] ["InComparedAnnualImage" "showPreYear"] ["InComparedAnnualImage" "showUnscaled"] ["InComparedAnnualImage" "customImageId"] ["link" "InComparedAnnualImage" "InRealAdoptionDataFile" "realData"]]
          } 
          {
            :label "PLZ-basierte Adoptionen mit Realdaten" 
            :set "set_InComparedAnnualZipImage" 
            :description "todo" 
            :tags [["InComparedAnnualZipImage" "enabled"] ["InComparedAnnualZipImage" "useGnuplot"] ["InComparedAnnualZipImage" "useR"] ["InComparedAnnualZipImage" "storeScript"] ["InComparedAnnualZipImage" "storeData"] ["InComparedAnnualZipImage" "storeImage"] ["InComparedAnnualZipImage" "imageWidth"] ["InComparedAnnualZipImage" "imageHeight"] ["InComparedAnnualZipImage" "linewidth"] ["InComparedAnnualZipImage" "skipInvalidZips"] ["InComparedAnnualZipImage" "showPreYear"] ["InComparedAnnualZipImage" "showUnscaled"] ["InComparedAnnualZipImage" "customImageId"] ["link" "InComparedAnnualZipImage" "InRealAdoptionDataFile" "realData"]]
          } 
          {
            :label "Adoptionsphasenübersicht" 
            :set "set_InAdoptionPhaseOverviewImage" 
            :description "todo" 
            :tags [["InAdoptionPhaseOverviewImage" "enabled"] ["InAdoptionPhaseOverviewImage" "useGnuplot"] ["InAdoptionPhaseOverviewImage" "useR"] ["InAdoptionPhaseOverviewImage" "storeScript"] ["InAdoptionPhaseOverviewImage" "storeData"] ["InAdoptionPhaseOverviewImage" "storeImage"] ["InAdoptionPhaseOverviewImage" "imageWidth"] ["InAdoptionPhaseOverviewImage" "imageHeight"] ["InAdoptionPhaseOverviewImage" "boxWidth"] ["InAdoptionPhaseOverviewImage" "customImageId"]]
          } 
          {
            :label "Prozessphasenübersicht" 
            :set "set_InProcessPhaseOverviewImage" 
            :description "todo" 
            :tags [["InProcessPhaseOverviewImage" "enabled"] ["InProcessPhaseOverviewImage" "useGnuplot"] ["InProcessPhaseOverviewImage" "useR"] ["InProcessPhaseOverviewImage" "storeScript"] ["InProcessPhaseOverviewImage" "storeData"] ["InProcessPhaseOverviewImage" "storeImage"] ["InProcessPhaseOverviewImage" "imageWidth"] ["InProcessPhaseOverviewImage" "imageHeight"] ["InProcessPhaseOverviewImage" "boxWidth"] ["InProcessPhaseOverviewImage" "customImageId"]]
          } 
          {
            :label "Interessensübersicht" 
            :set "set_InInterestOverviewImage" 
            :description "todo" 
            :tags [["InInterestOverviewImage" "enabled"] ["InInterestOverviewImage" "useGnuplot"] ["InInterestOverviewImage" "useR"] ["InInterestOverviewImage" "storeScript"] ["InInterestOverviewImage" "storeData"] ["InInterestOverviewImage" "storeImage"] ["InInterestOverviewImage" "imageWidth"] ["InInterestOverviewImage" "imageHeight"] ["InInterestOverviewImage" "boxWidth"] ["InInterestOverviewImage" "customImageId"]]
          }
        ]
      } 
      {
        :label "Netzwerkvisualisierung" 
        :description "Hier kann die Netzwerkvisualisierung konfiguriert werden." 
        :sections [
          {
            :label "Einstellungen" 
            :description "Ermöglicht die allgemeine Konfiguration von Graphviz für die Netzwerkvisualisierung." 
            :tags [["InGraphvizGeneral" "storeEndImage"] ["InGraphvizGeneral" "storeDotFile"] ["InGraphvizGeneral" "preferredImageWidth"] ["InGraphvizGeneral" "preferredImageHeight"] ["InGraphvizGeneral" "positionBasedLayout"] ["InGraphvizGeneral" "freeLayout"] ["InGraphvizGeneral" "keepAspectRatio"] ["InGraphvizGeneral" "useDefaultPositionIfMissing"]]
          } 
          {
            :label "Agentengruppe-Farben-Mapping" 
            :set "set_InConsumerAgentGroupColor" 
            :description "Agentengruppe, welche im Graphen dargestellt werden sollen." 
            :tags [["InConsumerAgentGroupColor" "rgba"] ["link" "InConsumerAgentGroupColor" "InConsumerAgentGroup" "groups"]]
          }
        ]
      }
    ]
  } 
  {
    :label "Spezielle Eingabedaten" 
    :description "Hier können spezielle Eingabendaten konfiguriert werden." 
    :sections [
      {
        :label "Für PVact" 
        :description "Hier können für PVact spezielle Eingabendaten konfiguriert werden." 
        :sections [
          {
            :label "Jährliche Konstruktionsraten" 
            :description "Stellt die jährlichen Konstruktionsraten für die Jahre von 2008 bis 2020 ein." 
            :tags [["InSpecialPVactInput" "useConstRates"] ["InSpecialPVactInput" "const2008"] ["InSpecialPVactInput" "const2009"] ["InSpecialPVactInput" "const2010"] ["InSpecialPVactInput" "const2011"] ["InSpecialPVactInput" "const2012"] ["InSpecialPVactInput" "const2013"] ["InSpecialPVactInput" "const2014"] ["InSpecialPVactInput" "const2015"] ["InSpecialPVactInput" "const2016"] ["InSpecialPVactInput" "const2017"] ["InSpecialPVactInput" "const2018"] ["InSpecialPVactInput" "const2019"] ["InSpecialPVactInput" "const2020"]]
          } 
          {
            :label "Jährliche Renovierungsraten" 
            :description "Stellt die jährlichen Renovierungsraten für die Jahre von 2008 bis 2020 ein." 
            :tags [["InSpecialPVactInput" "useRenoRates"] ["InSpecialPVactInput" "reno2008"] ["InSpecialPVactInput" "reno2009"] ["InSpecialPVactInput" "reno2010"] ["InSpecialPVactInput" "reno2011"] ["InSpecialPVactInput" "reno2012"] ["InSpecialPVactInput" "reno2013"] ["InSpecialPVactInput" "reno2014"] ["InSpecialPVactInput" "reno2015"] ["InSpecialPVactInput" "reno2016"] ["InSpecialPVactInput" "reno2017"] ["InSpecialPVactInput" "reno2018"] ["InSpecialPVactInput" "reno2019"] ["InSpecialPVactInput" "reno2020"]]
          }
        ]
      }
    ]
  } 
  {
    :label "Namen" 
    :set "set_InAttributeName" 
    :description "Ermöglicht die Definition von Namen. Namen können für verschiedene Optionen genutzt werden, wie zum Beispiel die Bestimmung von Tabellenspalten oder als gemeinsame Basis von Eigenschaften (Attribute). (Anmerkung: Namen dienen als Ersatz für textbasierte Parameter.)" 
    :tags [["InAttributeName" "placeholder"]]
  } 
  {
    :label "Dateien" 
    :description "Ermöglicht die Festlegung von Eingabedateien." 
    :sections [
      {
        :label "PV Dateien" 
        :set "set_InPVFile" 
        :description "Daten im PV-Datenformat, welche in einer .xlsx sein müssen." 
        :tags [["InPVFile" "placeholderPVFile"]]
      } 
      {
        :label "Reale Adoptionsdaten" 
        :set "set_InRealAdoptionDataFile" 
        :description "Adoptionsdaten in tabellarischer Form, welche in einer .xlsx sein müssen. Zusätzlich wird das Tabelleblatt 'LaufendeSumme' benötigt." 
        :tags [["InRealAdoptionDataFile" "placeholder"]]
      } 
      {
        :label "Tabellarische Dateien" 
        :set "set_InSpatialTableFile" 
        :description "Daten in tabellarischer Form. Es werden .xlsx und .csv unterstützt." 
        :tags [["InSpatialTableFile" "coverage"]]
      }
    ]
  } 
  {
    :label "Verteilungsfunktionen" 
    :description "Ermöglicht die Erstellung verschiedenster Verteilungsfunktionen." 
    :sections [
      {
        :label "Bernoulliverteilung" 
        :set "set_InBernoulliDistribution" 
        :description "Auf Bernoulli basierende Verteilungsfunktion, welche mit Wahrscheinlichkeit p x oder (1-p) y zurück gibt." 
        :tags [["InBernoulliDistribution" "p"] ["InBernoulliDistribution" "trueValue"] ["InBernoulliDistribution" "falseValue"]]
      } 
      {
        :label "Boolean" 
        :set "set_InBooleanDistribution" 
        :description "Verteilungsfunktion, welche x oder y zurück gibt. Der Wahrscheinlichkeit ist dabei gleichverteilt. Diese Funktion entspricht einer Bernoulliverteilung mit p = 0,5." 
        :tags [["InBooleanDistribution" "trueValue"] ["InBooleanDistribution" "falseValue"]]
      } 
      {
        :label "Dirac-Verteilung" 
        :set "set_InDiracUnivariateDistribution" 
        :description "Verteilungsfunktion, welche einen konstanten Wert zurück gibt." 
        :tags [["InDiracUnivariateDistribution" "value"]]
      } 
      {
        :label "Gewichtete Massepunkte" 
        :set "set_InFiniteMassPointsDiscreteDistribution" 
        :description "Verteilungsfunktion, welche auf Massepunkten basiert." 
        :tags [["link" "InFiniteMassPointsDiscreteDistribution" "InMassPoint" "massPoints"]] 
        :sections [
          {
            :label "Massepunkt" 
            :set "set_InMassPoint" 
            :description "Massepunkt mit Wert und Gewicht" 
            :tags [["InMassPoint" "mpValue"] ["InMassPoint" "mpWeight"]]
          }
        ]
      } 
      {
        :label "Normalverteilung" 
        :set "set_InNormalDistribution" 
        :description "Verteilungsfunktion auf Basis der Normalverteilung." 
        :tags [["InNormalDistribution" "standardDeviation"] ["InNormalDistribution" "mean"]]
      } 
      {
        :label "Beschränkte Normalverteilung" 
        :set "set_InBoundedNormalDistribution" 
        :description "Verteilungsfunktion, welche auf der Normalverteilung basiert und nach oben und unten beschränkt ist. " 
        :tags [["InBoundedNormalDistribution" "standardDeviation"] ["InBoundedNormalDistribution" "mean"] ["InBoundedNormalDistribution" "lowerBound"] ["InBoundedNormalDistribution" "upperBound"]]
      } 
      {
        :label "Abgeschnittene Normalverteilung" 
        :set "set_InTruncatedNormalDistribution" 
        :description "Verteilungsfunktion auf Basis der abgeschnittenen Normalverteilung (truncated normal distribution)." 
        :tags [["InTruncatedNormalDistribution" "standardDeviation"] ["InTruncatedNormalDistribution" "mean"] ["InTruncatedNormalDistribution" "lowerBound"] ["InTruncatedNormalDistribution" "upperBound"]]
      } 
      {
        :label "Gleichverteilte ganze Zahlen" 
        :set "set_InBoundedUniformIntegerDistribution" 
        :description "Verteilungsfunktion, welche ganzzahlige Werte gleichverteilt aus einem Bereich zieht." 
        :tags [["InBoundedUniformDoubleDistribution" "lowerBound"] ["InBoundedUniformDoubleDistribution" "upperBound"] ["InBoundedUniformIntegerDistribution" "lowerBound"] ["InBoundedUniformIntegerDistribution" "upperBound"]]
      }
    ]
  } 
  {
    :label "Agenten" 
    :description "Ermöglicht die Erstellung unterschiedlicher Akteure in IRPact." 
    :sections [
      {
        :label "Konsumer" 
        :description "Ermöglicht die Erstellung von Konsumern." 
        :sections [
          {
            :label "Gruppen" 
            :description "Definiert Konsumergruppen" 
            :sections [
              {
                :label "Allgemeine Gruppen" 
                :set "set_InGeneralConsumerAgentGroup" 
                :description "Erstellt eine allgemeine Konsumergruppe." 
                :tags [["link" "InGeneralConsumerAgentGroup" "InDependentConsumerAgentGroupAttribute" "cagAttributes"] ["link" "InGeneralConsumerAgentGroup" "InProductInterestSupplyScheme" "cagInterest"] ["link" "InGeneralConsumerAgentGroup" "InProductFindingScheme" "productFindingSchemes"] ["link" "InGeneralConsumerAgentGroup" "InSpatialDistribution" "spatialDistribution"]]
              } 
              {
                :label "PVact Gruppen" 
                :set "set_InPVactConsumerAgentGroup" 
                :description "Erstellt eine spezielle Konsumergruppe für PVact. Diese sind durch ihre fest vorgegebenen Attribute gekennzeichnet." 
                :tags [["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "noveltySeeking"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "dependentJudgmentMaking"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "environmentalConcern"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "interestThreshold"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "financialThreshold"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "adoptionThreshold"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "communication"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "rewire"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "initialAdopter"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "rateOfConvergence"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "initialProductInterest"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "initialProductAwareness"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "constructionRate"] ["link" "InPVactConsumerAgentGroup" "InUnivariateDoubleDistribution" "renovationRate"] ["link" "InPVactConsumerAgentGroup" "InSpatialDistribution" "spatialDistribution"]]
              }
            ]
          } 
          {
            :label "Attribute" 
            :description "Definiert die Attribute von Agenten." 
            :sections [
              {
                :label "Allgemeine Attribute" 
                :set "set_InGeneralConsumerAgentGroupAttribute" 
                :description "Definiert allgemeine Attribute" 
                :tags [["link" "InGeneralConsumerAgentGroupAttribute" "InAttributeName" "attrName"] ["link" "InGeneralConsumerAgentGroupAttribute" "InUnivariateDoubleDistribution" "dist"]]
              } 
              {
                :label "Jahresabhängiges Attribut" 
                :set "set_InGeneralConsumerAgentAnnualGroupAttribute" 
                :description "Der Wert (bzw. Verteilungsfunktion) dieser Attribute lässt sich für die jeweiligen Simulationsjahre individuell definieren." 
                :tags [["link" "InGeneralConsumerAgentAnnualGroupAttribute" "InAttributeName" "attributeName"] ["link" "InGeneralConsumerAgentAnnualGroupAttribute" "InUnivariateDoubleDistribution" "distribution"]]
              } 
              {
                :label "Namensbasierte Attribute" 
                :set "set_InNameSplitConsumerAgentGroupAttribute" 
                :description "Dieses Attribut wird über seinen Namen definiert." 
                :tags [["link" "InNameSplitConsumerAgentGroupAttribute" "InUnivariateDoubleDistribution" "dist"]]
              }
            ]
          } 
          {
            :label "Affinitäten" 
            :description "Legt die Affinity zwischen den jeweiligen Konsumergruppen fest." 
            :sections [
              {
                :label "Affinitätenmenge" 
                :set "set_InAffinities" 
                :description "Legt die Affinity zwischen den jeweiligen Konsumergruppen fest." 
                :tags [["link" "InAffinities" "InAffinityEntry" "entries"]]
              } 
              {
                :label "Affinitätseintrag" 
                :set "set_InComplexAffinityEntry" 
                :description "Erstellt einen einfachen Affinitätseintag zwischen einer Ausgangs- und einer Zielgruppe." 
                :tags [["link" "InComplexAffinityEntry" "InConsumerAgentGroup" "srcCag"] ["link" "InComplexAffinityEntry" "InConsumerAgentGroup" "tarCag"] ["InComplexAffinityEntry" "affinityValue"]]
              } 
              {
                :label "Namensbasierter Affinitätseintrag" 
                :set "set_InNameSplitAffinityEntry" 
                :description "Dieser Variante ist eine Alternative zum normalen Affinitätseintrag. Hier werden die Ausgangs- und die Zielgruppe direkt aus dem Namen des Eintrages ermittelt. Es muss somt darauf geachtet werden, dass der Name korrekt definiert wird. Beispiel: Ausgangsgruppe 'A' und Zielgruppe 'B', dann muss der Affinitätseintrag 'A_B' heißen." 
                :tags [["InNameSplitAffinityEntry" "affinityValue"]]
              }
            ]
          } 
          {
            :label "Produktinteresse" 
            :description "Legt die verwendeten Interessens-Varianten für die Konsumergruppen fest." 
            :sections [
              {
                :label "Grenzwertbasiert" 
                :set "set_InProductThresholdInterestSupplyScheme" 
                :description "Grenzwertbasierte Interessens-Varianten" 
                :tags [["link" "InProductThresholdInterestSupplyScheme" "InProductGroupThresholdEntry" "entries"]] 
                :sections [
                  {
                    :label "Grenzwertbasierte Einträge" 
                    :set "set_InProductGroupThresholdEntry" 
                    :description "Ermöglicht die Definition von Einträgen für ein grenzwertbasiertes Interesse." 
                    :tags [["link" "InProductGroupThresholdEntry" "InUnivariateDoubleDistribution" "interestDistribution"] ["link" "InProductGroupThresholdEntry" "InProductGroup" "productGroups"]]
                  }
                ]
              }
            ]
          }
        ]
      } 
      {
        :label "Population" 
        :description "Legt die Agentenpopulation fest." 
        :sections [
          {
            :label "Feste Konsumergruppengröße" 
            :set "set_InFixConsumerAgentPopulation" 
            :description "Erstellt eine Population mit festen Größen für die einzelnen Agentengruppen." 
            :tags [["InFixConsumerAgentPopulation" "size"] ["link" "InFixConsumerAgentPopulation" "InConsumerAgentGroup" "cags"]]
          } 
          {
            :label "Dateibasierte dynamische Konsumergruppengröße" 
            :set "set_InFileBasedConsumerAgentPopulation" 
            :description "Erstellt eine Population basierend auf einer Eingabedatei." 
            :tags [["InFileBasedConsumerAgentPopulation" "desiredSize"] ["InFileBasedConsumerAgentPopulation" "useAll"] ["InFileBasedConsumerAgentPopulation" "requiresDesiredTotalSize"] ["link" "InFileBasedConsumerAgentPopulation" "InConsumerAgentGroup" "cags"] ["link" "InFileBasedConsumerAgentPopulation" "InSpatialTableFile" "file"] ["link" "InFileBasedConsumerAgentPopulation" "InAttributeName" "selectKey"]]
          } 
          {
            :label "Dateibasierte dynamische Konsumergruppengröße für PVact" 
            :set "set_InFileBasedPVactConsumerAgentPopulation" 
            :description "Erstellt eine Population basierend auf einer Eingabedatei. Die Agentengruppen werden dabei automatisch mit den Milieus in Relation gesetzt." 
            :tags [["InFileBasedPVactConsumerAgentPopulation" "desiredSize"] ["InFileBasedPVactConsumerAgentPopulation" "useAll"] ["InFileBasedPVactConsumerAgentPopulation" "requiresDesiredTotalSize"] ["link" "InFileBasedPVactConsumerAgentPopulation" "InConsumerAgentGroup" "cags"] ["link" "InFileBasedPVactConsumerAgentPopulation" "InSpatialTableFile" "file"]]
          }
        ]
      }
    ]
  } 
  {
    :label "Netzwerk" 
    :description "Definiert das Netzwerk in IRPact. Aktuell darf nur ein einziges Netzwerk definiert werden." 
    :sections [
      {
        :label "Topologie" 
        :description "Definiert die Netzwerktopologie in IRPact." 
        :sections [
          {
            :label "Knotenloser Graph" 
            :set "set_InUnlinkedGraphTopology" 
            :description "Leere Topologie, welche keine Kanten besitzt." 
            :tags [["InUnlinkedGraphTopology" "placeholderUnlinked"]]
          } 
          {
            :label "Vollständiger Graph" 
            :set "set_InCompleteGraphTopology" 
            :description "Nutzt einen vollständigen Netzwerkgraph." 
            :tags [["InCompleteGraphTopology" "initialWeight"]]
          } 
          {
            :label "Freie Topologie" 
            :set "set_InFreeNetworkTopology" 
            :description "Freie Topologie" 
            :tags [["link" "InFreeNetworkTopology" "InDistanceEvaluator" "distanceEvaluator"] ["link" "InFreeNetworkTopology" "InNumberOfTies" "numberOfTies"] ["link" "InFreeNetworkTopology" "InAffinities" "affinities"] ["InFreeNetworkTopology" "allowLessEdges"]] 
            :sections [
              {
                :label "Kanten je Konsumergruppe" 
                :set "set_InNumberOfTies" 
                :description "Legt die Kantenanzahl je Konsumergruppe fest." 
                :tags [["link" "InNumberOfTies" "InConsumerAgentGroup" "cags"] ["InNumberOfTies" "count"]]
              }
            ]
          }
        ]
      } 
      {
        :label "Abstandsfunktion" 
        :description "Definiert die Abstandsfunktion für das Netzwerk, um den räumlichen Einfluss bei der Netzwerkbildung mit einfließen zu lassen." 
        :sections [
          {
            :label "Keine Distanzfunktion" 
            :set "set_InNoDistance" 
            :description "Keine Distanzfunktion" 
            :tags [["InNoDistance" "placeholderNoDistance"]]
          } 
          {
            :label "Inverse Distanz" 
            :set "set_InInverse" 
            :description "Benutzt 1/distance für die Auswertung." 
            :tags [["InInverse" "placeholderInverse"]]
          }
        ]
      }
    ]
  } 
  {
    :label "Produkte" 
    :description "Ermöglicht das Einstellen von Produkten und verwandten Optionen." 
    :sections [
      {
        :label "Gruppen" 
        :description "Ermöglicht die Erstellung von Produktgruppen." 
        :sections [
          {
            :label "Allgemeines Produkt" 
            :set "set_InBasicProductGroup" 
            :description "Ermöglicht die Erstellung von allgemeinen Produktgruppen." 
            :tags [["link" "InBasicProductGroup" "InDependentProductGroupAttribute" "pgAttributes"]]
          }
        ]
      } 
      {
        :label "Attribute" 
        :description "Ermöglicht die Erstellung von Produktgruppenattributen." 
        :sections [
          {
            :label "Allgemeine Attribute" 
            :set "set_InBasicProductGroupAttribute" 
            :tags [["link" "InBasicProductGroupAttribute" "InAttributeName" "attrName"] ["link" "InBasicProductGroupAttribute" "InUnivariateDoubleDistribution" "dist"]]
          } 
          {
            :label "Namensbasierte Attribute" 
            :set "set_InNameSplitProductGroupAttribute" 
            :description "Dieses Attribut wird über seinen Namen definiert." 
            :tags [["link" "InNameSplitProductGroupAttribute" "InUnivariateDoubleDistribution" "dist"]]
          }
        ]
      } 
      {
        :label "Fixprodukte" 
        :set "set_InFixProductAttribute" 
        :description "Ermöglicht es Fixprodukte zu erstellen." 
        :tags [["link" "InFixProduct" "InProductGroup" "refPG"] ["link" "InFixProduct" "InFixProductAttribute" "fixPAttrs"] ["link" "InFixProductAttribute" "InProductGroupAttribute" "refPGA"] ["InFixProductAttribute" "fixPAvalue"]]
      } 
      {
        :label "Schema für Produktfindung" 
        :description "Benutzt 1/distance für die Auswertung." 
        :sections [
          {
            :label "Fixproduktschema" 
            :set "set_InFixProductFindingScheme" 
            :description "Dieses Schema basiert auf Fixprodukten." 
            :tags [["link" "InFixProductFindingScheme" "InFixProduct" "refFixProduct"]]
          }
        ]
      } 
      {
        :label "Initiale Adopter" 
        :description "Ermöglicht die Einstellung der initialen Adopter." 
        :sections [
          {
            :label "Attributbasierte initiale Adopter" 
            :set "set_InPVactAttributeBasedInitialAdoption" 
            :description "Mittels dieser Variante werden die initialen Adopter anhand des Attributes für initiale Adoptionen der Konsumergruppen festgelegt. Es müssen hier keine weiteren Optionen eingestellt werden." 
            :tags [["InPVactAttributeBasedInitialAdoption" "placeholder"]]
          } 
          {
            :label "Initiale Adopter nach realen Daten" 
            :set "set_InPVactFileBasedConsumerGroupBasedInitialAdoptionWithRealData" 
            :description "Mittels dieser Variante werden die initialen Adopter anhand von realen Daten bestimmt. Das Attribute für initiale Adoptionen gibt dabei die Verteilung innerhalb der Postleitzahlgebiete an und nicht den Anteil der Agenten selber." 
            :tags [["link" "InPVactFileBasedConsumerGroupBasedInitialAdoptionWithRealData" "InRealAdoptionDataFile" "file"]]
          } 
          {
            :label "Gewichtete initiale Adopter nach realen Daten" 
            :set "set_InPVactFileBasedWeightedConsumerGroupBasedInitialAdoptionWithRealData" 
            :description "Mittels dieser Variante werden die initialen Adopter anhand von realen Daten bestimmt. Das Attribute für initiale Adoptionen gibt dabei die Verteilung innerhalb der Postleitzahlgebiete an und nicht den Anteil der Agenten selber." 
            :tags [["InPVactFileBasedWeightedConsumerGroupBasedInitialAdoptionWithRealData" "scale"] ["InPVactFileBasedWeightedConsumerGroupBasedInitialAdoptionWithRealData" "fixError"] ["link" "InPVactFileBasedWeightedConsumerGroupBasedInitialAdoptionWithRealData" "InRealAdoptionDataFile" "file"]]
          }
        ]
      }
    ]
  } 
  {
    :label "Prozessmodell" 
    :description "todo" 
    :sections [
      {
        :label "Peereffektdistanzeinstellung" 
        :description "todo" 
        :sections [
          {
            :label "Kein Peereffekt" 
            :set "set_InDisabledProcessPlanNodeFilterScheme" 
            :description "Deaktiviert den Netzwerkfilter für die sichtbaren PV-Anlagen. Die sichtbare Komponente wird somit deaktiviert." 
            :tags [["InDisabledProcessPlanNodeFilterScheme" "placeholder"]]
          } 
          {
            :label "Peereffekt mit ganzen Gebiet" 
            :set "set_InEntireNetworkNodeFilterScheme" 
            :description "Nutzt das gesamte Netzwerk für die sichtbaren PV-Anlagen." 
            :tags [["InEntireNetworkNodeFilterScheme" "placeholder"]]
          } 
          {
            :label "Maximale Entfernung" 
            :set "set_InRAProcessPlanMaxDistanceFilterScheme" 
            :description "todo" 
            :tags [["InRAProcessPlanMaxDistanceFilterScheme" "maxDistance"] ["InRAProcessPlanMaxDistanceFilterScheme" "inclusive"]]
          }
        ]
      } 
      {
        :label "Unsicherheit" 
        :description "Ermöglicht es die Unsicherheit für Attribute zu bestimmen, welche durch den 'relative agreement' Algorithmus beeinflusst werden." 
        :sections [
          {
            :label "Unsicherheit basierend auf allen Agenten" 
            :set "set_InGlobalDeffuantUncertainty" 
            :description "Bestimmt die Unsicherheit in Bezug auf alle zu betrachtenen Agentengruppen." 
            :tags [["InGlobalDeffuantUncertainty" "extremistParameter"] ["InGlobalDeffuantUncertainty" "extremistUncertainty"] ["InGlobalDeffuantUncertainty" "moderateUncertainty"] ["InGlobalDeffuantUncertainty" "lowerBoundInclusive"] ["InGlobalDeffuantUncertainty" "upperBoundInclusive"] ["link" "InGlobalDeffuantUncertainty" "InConsumerAgentGroup" "cags"] ["link" "InGlobalDeffuantUncertainty" "InAttributeName" "attributeNames"]]
          } 
          {
            :label "Unsicherheit basierend auf allen PVact-Agenten" 
            :set "set_InPVactGlobalDeffuantUncertainty" 
            :description "Bestimmt die Unsicherheit in Bezug auf alle zu betrachtenen Agentengruppen. Im Gegensatz zur allgemeinen Variante sind die Attribute hier fest vorgegeben." 
            :tags [["InPVactGlobalDeffuantUncertainty" "extremistParameter"] ["InPVactGlobalDeffuantUncertainty" "extremistUncertainty"] ["InPVactGlobalDeffuantUncertainty" "moderateUncertainty"] ["InPVactGlobalDeffuantUncertainty" "lowerBoundInclusive"] ["InPVactGlobalDeffuantUncertainty" "upperBoundInclusive"] ["link" "InPVactGlobalDeffuantUncertainty" "InConsumerAgentGroup" "cags"]]
          } 
          {
            :label "Unsicherheit basierend auf individuellen Agentengruppen" 
            :set "set_InGroupBasedDeffuantUncertainty" 
            :description "Bestimmt die Unsicherheit individuell für jede betrachtete Agentengruppe." 
            :tags [["InGroupBasedDeffuantUncertainty" "extremistParameter"] ["InGroupBasedDeffuantUncertainty" "extremistUncertainty"] ["InGroupBasedDeffuantUncertainty" "moderateUncertainty"] ["InGroupBasedDeffuantUncertainty" "lowerBoundInclusive"] ["InGroupBasedDeffuantUncertainty" "upperBoundInclusive"] ["link" "InGroupBasedDeffuantUncertainty" "InConsumerAgentGroup" "cags"] ["link" "InGroupBasedDeffuantUncertainty" "InAttributeName" "attributeNames"]]
          } 
          {
            :label "Unsicherheit basierend auf individuellen PVact-Agentengruppen" 
            :set "set_InPVactGroupBasedDeffuantUncertainty" 
            :description "Bestimmt die Unsicherheit individuell für jede betrachtete Agentengruppe. Im Gegensatz zur allgemeinen Variante sind die Attribute hier fest vorgegeben." 
            :tags [["InPVactGroupBasedDeffuantUncertainty" "extremistParameter"] ["InPVactGroupBasedDeffuantUncertainty" "extremistUncertainty"] ["InPVactGroupBasedDeffuantUncertainty" "moderateUncertainty"] ["InPVactGroupBasedDeffuantUncertainty" "lowerBoundInclusive"] ["InPVactGroupBasedDeffuantUncertainty" "upperBoundInclusive"] ["link" "InPVactGroupBasedDeffuantUncertainty" "InConsumerAgentGroup" "cags"]]
          }
        ]
      } 
      {
        :label "Modulares Prozessmodell2" 
        :description "todo" 
        :sections [
          {
            :label "Modell" 
            :description "todo" 
            :sections [
              {
                :label "Standardprozessmodell" 
                :set "set_InBasicCAModularProcessModel" 
                :description "todo" 
                :tags [["link" "InBasicCAModularProcessModel" "InConsumerAgentEvalModule2" "startModule"] ["link" "InBasicCAModularProcessModel" "InInitializationHandler" "initializationHandlers"] ["link" "InBasicCAModularProcessModel" "InNewProductHandler" "newProductHandlers"] ["link" "InBasicCAModularProcessModel" "InReevaluator2" "initializationReevaluators"] ["link" "InBasicCAModularProcessModel" "InReevaluator2" "startOfYearReevaluators"] ["link" "InBasicCAModularProcessModel" "InReevaluator2" "midOfYearReevaluators"] ["link" "InBasicCAModularProcessModel" "InReevaluator2" "endOfYearReevaluators"]]
              }
            ]
          } 
          {
            :label "Reevaluierung" 
            :description "todo" 
            :sections [
              {
                :label "ReevaluatorModuleLinker" 
                :set "set_InReevaluatorModuleLinker" 
                :description "todo" 
                :tags [["link" "InReevaluatorModuleLinker" "InConsumerAgentReevaluationModule2" "modules"]]
              } 
              {
                :label "AnnualInterestLogger" 
                :set "set_InAnnualInterestLogger" 
                :description "todo" 
                :tags [["InAnnualInterestLogger" "placeholder"]]
              } 
              {
                :label "ConstructionRenovationUpdater" 
                :set "set_InConstructionRenovationUpdater" 
                :description "todo" 
                :tags [["InConstructionRenovationUpdater" "placeholder"]]
              } 
              {
                :label "DecisionMakingReevaluator" 
                :set "set_InDecisionMakingReevaluator" 
                :description "todo" 
                :tags [["link" "InDecisionMakingReevaluator" "InConsumerAgentModule2" "modules"]]
              } 
              {
                :label "ImpededResetter" 
                :set "set_InImpededResetter" 
                :description "todo" 
                :tags [["InImpededResetter" "placeholder"]]
              } 
              {
                :label "Fancy Agentenattributaktualisierer" 
                :set "set_InLinearePercentageAgentAttributeUpdater" 
                :description "todo" 
                :tags [["InLinearePercentageAgentAttributeUpdater" "priority"] ["link" "InLinearePercentageAgentAttributeUpdater" "InLinearePercentageAgentAttributeScaler" "scaler"]]
              }
            ]
          } 
          {
            :label "Konfiguratoren" 
            :description "todo" 
            :sections [
              {
                :label "Initialisierung" 
                :description "todo" 
                :sections [
                  {
                    :label "Agentattributskalierer" 
                    :set "set_InAgentAttributeScaler" 
                    :description "todo; newValue = (oldValue - min) / (max - min)" 
                    :tags [["link" "InAgentAttributeScaler" "InAttributeName" "attribute"]]
                  } 
                  {
                    :label "Fancy Agentattributskalierer" 
                    :set "set_InLinearePercentageAgentAttributeScaler" 
                    :description "todo; y = m * x + n" 
                    :tags [["InLinearePercentageAgentAttributeScaler" "mValue"] ["InLinearePercentageAgentAttributeScaler" "nValue"] ["link" "InLinearePercentageAgentAttributeScaler" "InAttributeName" "attribute"]]
                  }
                ]
              }
            ]
          } 
          {
            :label "Module" 
            :description "todo" 
            :sections [
              {
                :label "Aktionsmodule" 
                :description "todo" 
                :sections [
                  {
                    :label "Kommunikationsmodul" 
                    :set "set_InCommunicationModule_actiongraphnode2" 
                    :description "todo" 
                    :tags [["InCommunicationModule" "actiongraphnode2" "adopterPoints"] ["InCommunicationModule" "actiongraphnode2" "interestedPoints"] ["InCommunicationModule" "actiongraphnode2" "awarePoints"] ["InCommunicationModule" "actiongraphnode2" "unknownPoints"] ["InCommunicationModule" "actiongraphnode2" "speedOfConvergence"] ["InCommunicationModule" "actiongraphnode2" "attitudeGap"] ["InCommunicationModule" "actiongraphnode2" "chanceNeutral"] ["InCommunicationModule" "actiongraphnode2" "chanceConvergence"] ["InCommunicationModule" "actiongraphnode2" "chanceDivergence"] ["link" "InCommunicationModule" "actiongraphnode2" "InUncertainty" "uncertainties"]]
                  } 
                  {
                    :label "StopAfterSuccessfulTaskModule" 
                    :set "set_InStopAfterSuccessfulTaskModule_actiongraphnode2" 
                    :description "todo" 
                    :tags [["link" "InStopAfterSuccessfulTaskModule" "actiongraphnode2" "InConsumerAgentBoolModule2" "input" "graphedge2"]]
                  } 
                  {
                    :label "IfElseActionModule" 
                    :set "set_InIfElseActionModule_actiongraphnode2" 
                    :description "todo" 
                    :tags [["link" "InIfElseActionModule" "actiongraphnode2" "InConsumerAgentBoolModule2" "test" "graphedge2"] ["link" "InIfElseActionModule" "actiongraphnode2" "InConsumerAgentActionModule2" "onTrue" "graphedge2"] ["link" "InIfElseActionModule" "actiongraphnode2" "InConsumerAgentActionModule2" "onFalse" "graphedge2"]]
                  } 
                  {
                    :label "NOP" 
                    :set "set_InNOP_actiongraphnode2" 
                    :description "todo" 
                    :tags [["InNOP" "actiongraphnode2" "placeholder"]]
                  } 
                  {
                    :label "Rewiremodul" 
                    :set "set_InRewireModule_actiongraphnode2" 
                    :description "todo" 
                    :tags [["InRewireModule" "actiongraphnode2" "placeholder"]]
                  }
                ]
              } 
              {
                :label "Entscheidungsmodule" 
                :description "todo" 
                :sections [
                  {
                    :label "BernoulliModule" 
                    :set "set_InBernoulliModule_boolgraphnode2" 
                    :description "todo" 
                    :tags [["InBernoulliModule" "boolgraphnode2" "priority"] ["link" "InBernoulliModule" "boolgraphnode2" "InConsumerAgentCalculationModule2" "input" "graphedge2"]]
                  } 
                  {
                    :label "ThresholdReachedModule" 
                    :set "set_InThresholdReachedModule_boolgraphnode2" 
                    :description "todo" 
                    :tags [["InThresholdReachedModule" "boolgraphnode2" "priority"] ["link" "InThresholdReachedModule" "boolgraphnode2" "InConsumerAgentCalculationModule2" "draw" "graphedge2"] ["link" "InThresholdReachedModule" "boolgraphnode2" "InConsumerAgentCalculationModule2" "threshold" "graphedge2"]]
                  } 
                  {
                    :label "IfDoActionModule" 
                    :set "set_InIfDoActionModule_boolgraphnode2" 
                    :description "todo" 
                    :tags [["InIfDoActionModule" "boolgraphnode2" "priority"] ["link" "InIfDoActionModule" "boolgraphnode2" "InConsumerAgentBoolModule2" "ifInput" "graphedge2"] ["link" "InIfDoActionModule" "boolgraphnode2" "InConsumerAgentActionModule2" "taskInput" "graphedge2"]]
                  }
                ]
              } 
              {
                :label "Berechnungsmodule" 
                :description "todo" 
                :sections [
                  {
                    :label "MulScalarModule" 
                    :set "set_InMulScalarModule_calcgraphnode2" 
                    :description "todo" 
                    :tags [["InMulScalarModule" "calcgraphnode2" "scalar"] ["link" "InMulScalarModule" "calcgraphnode2" "InConsumerAgentCalculationModule2" "input" "graphedge2"]]
                  } 
                  {
                    :label "AddScalarModule" 
                    :set "set_InAddScalarModule_calcgraphnode2" 
                    :description "todo" 
                    :tags [["InAddScalarModule" "calcgraphnode2" "scalar"] ["link" "InAddScalarModule" "calcgraphnode2" "InConsumerAgentCalculationModule2" "input" "graphedge2"]]
                  } 
                  {
                    :label "LogisticModule" 
                    :set "set_InLogisticModule_calcgraphnode2" 
                    :description "L/(1+e^(-k*(x-x0)))" 
                    :tags [["InLogisticModule" "calcgraphnode2" "valueL"] ["InLogisticModule" "calcgraphnode2" "valueK"] ["link" "InLogisticModule" "calcgraphnode2" "InConsumerAgentCalculationModule2" "xinput" "graphedge2"] ["link" "InLogisticModule" "calcgraphnode2" "InConsumerAgentCalculationModule2" "x0input" "graphedge2"]]
                  } 
                  {
                    :label "SumModule" 
                    :set "set_InSumModule_calcgraphnode2" 
                    :description "todo" 
                    :tags [["link" "InProductModule" "calcgraphnode2" "InConsumerAgentCalculationModule2" "input" "graphedge2"] ["link" "InSumModule" "calcgraphnode2" "InConsumerAgentCalculationModule2" "input" "graphedge2"]]
                  } 
                  {
                    :label "CsvValueLoggingModule" 
                    :set "set_InCsvValueLoggingModule_calcloggraphnode2" 
                    :description "todo" 
                    :tags [["InCsvValueLoggingModule" "calcloggraphnode2" "skipReevaluatorCall"] ["InCsvValueLoggingModule" "calcloggraphnode2" "storeXlsx"] ["link" "InCsvValueLoggingModule" "calcloggraphnode2" "InConsumerAgentCalculationModule2" "input" "graphedge2"]]
                  } 
                  {
                    :label "MinimalCsvValueLoggingModule" 
                    :set "set_InMinimalCsvValueLoggingModule_calcloggraphnode2" 
                    :description "todo" 
                    :tags [["InMinimalCsvValueLoggingModule" "calcloggraphnode2" "skipReevaluatorCall"] ["InMinimalCsvValueLoggingModule" "calcloggraphnode2" "storeXlsx"] ["link" "InMinimalCsvValueLoggingModule" "calcloggraphnode2" "InConsumerAgentCalculationModule2" "input" "graphedge2"]]
                  }
                ]
              } 
              {
                :label "Eingabemodule" 
                :description "todo" 
                :sections [
                  {
                    :label "Attributmodul" 
                    :set "set_InAttributeInputModule_inputgraphnode2" 
                    :description "todo" 
                    :tags [["link" "InAttributeInputModule" "inputgraphnode2" "InAttributeName" "attribute"]]
                  } 
                  {
                    :label "ValueModule" 
                    :set "set_InValueModule_inputgraphnode2" 
                    :description "todo" 
                    :tags [["InValueModule" "inputgraphnode2" "value"]]
                  } 
                  {
                    :label "NaNModule" 
                    :set "set_InNaNModule_inputgraphnode2" 
                    :description "Gibt NaN (not a number) zurück." 
                    :tags [["InNaNModule" "inputgraphnode2" "placeholder"]]
                  } 
                  {
                    :label "GlobalAvgNPVModule" 
                    :set "set_InGlobalAvgNPVModule_inputgraphnode2" 
                    :description "todo" 
                    :tags [["link" "InGlobalAvgNPVModule" "inputgraphnode2" "InPVFile" "pvFile"]]
                  } 
                  {
                    :label "NPVModule" 
                    :set "set_InNPVModule_inputgraphnode2" 
                    :description "todo" 
                    :tags [["link" "InNPVModule" "inputgraphnode2" "InPVFile" "pvFile"]]
                  } 
                  {
                    :label "LocalShareOfAdopterModule" 
                    :set "set_InLocalShareOfAdopterModule_inputgraphnode2" 
                    :description "todo" 
                    :tags [["InLocalShareOfAdopterModule" "inputgraphnode2" "maxToStore"] ["link" "InLocalShareOfAdopterModule" "inputgraphnode2" "InRAProcessPlanNodeFilterScheme" "nodeFilterScheme"]]
                  } 
                  {
                    :label "SocialShareOfAdopterModule" 
                    :set "set_InSocialShareOfAdopterModule_inputgraphnode2" 
                    :description "todo" 
                    :tags [["InSocialShareOfAdopterModule" "inputgraphnode2" "placeholder"]]
                  } 
                  {
                    :label "AvgFinModule" 
                    :set "set_InAvgFinModule_inputgraphnode2" 
                    :description "todo" 
                    :tags [["InAvgFinModule" "inputgraphnode2" "placeholder"]]
                  }
                ]
              } 
              {
                :label "Planauswertungsmodule" 
                :description "todo" 
                :sections [
                  {
                    :label "RunUntilFailureModule" 
                    :set "set_InRunUntilFailureModule_evalgraphnode2" 
                    :description "todo" 
                    :tags [["link" "InRunUntilFailureModule" "evalgraphnode2" "InConsumerAgentModule2" "input" "graphedge2"]]
                  }
                ]
              } 
              {
                :label "PVact-Auswertungsmodule" 
                :description "todo" 
                :sections [
                  {
                    :label "YearBasedAdoptionDeciderModule" 
                    :set "set_InYearBasedAdoptionDeciderModule_evalragraphnode2" 
                    :description "todo" 
                    :tags [["InYearBasedAdoptionDeciderModule" "evalragraphnode2" "base"] ["InYearBasedAdoptionDeciderModule" "evalragraphnode2" "factor"] ["link" "InYearBasedAdoptionDeciderModule" "evalragraphnode2" "InConsumerAgentEvalRAModule2" "input" "graphedge2"]]
                  } 
                  {
                    :label "InterestModule" 
                    :set "set_InInterestModule_evalragraphnode2" 
                    :description "todo" 
                    :tags [["link" "InInterestModule" "evalragraphnode2" "InConsumerAgentActionModule2" "input" "graphedge2"]]
                  } 
                  {
                    :label "InitializationModule" 
                    :set "set_InInitializationModule_evalragraphnode2" 
                    :description "todo" 
                    :tags [["InInitializationModule" "evalragraphnode2" "placeholder"]]
                  } 
                  {
                    :label "DoAdoptModule" 
                    :set "set_InDoAdoptModule_evalragraphnode2" 
                    :description "todo" 
                    :tags [["link" "InDoAdoptModule" "evalragraphnode2" "InConsumerAgentEvalRAModule2" "input" "graphedge2"]]
                  } 
                  {
                    :label "FeasibilityModule" 
                    :set "set_InFeasibilityModule_evalragraphnode2" 
                    :description "todo" 
                    :tags [["link" "InFeasibilityModule" "evalragraphnode2" "InConsumerAgentActionModule2" "input" "graphedge2"]]
                  } 
                  {
                    :label "PhaseUpdateModule" 
                    :set "set_InPhaseUpdateModule_evalragraphnode2" 
                    :description "todo" 
                    :tags [["link" "InPhaseUpdateModule" "evalragraphnode2" "InConsumerAgentEvalRAModule2" "input" "graphedge2"]]
                  } 
                  {
                    :label "PhaseLoggingModule" 
                    :set "set_InPhaseLoggingModule_evalragraphnode2" 
                    :description "todo" 
                    :tags [["link" "InPhaseLoggingModule" "evalragraphnode2" "InConsumerAgentEvalRAModule2" "input" "graphedge2"]]
                  } 
                  {
                    :label "MainBranchingModule" 
                    :set "set_InMainBranchingModule_evalragraphnode2" 
                    :description "todo" 
                    :tags [["link" "InMainBranchingModule" "evalragraphnode2" "InConsumerAgentEvalRAModule2" "init" "graphedge2"] ["link" "InMainBranchingModule" "evalragraphnode2" "InConsumerAgentEvalRAModule2" "awareness" "graphedge2"] ["link" "InMainBranchingModule" "evalragraphnode2" "InConsumerAgentEvalRAModule2" "feasibility" "graphedge2"] ["link" "InMainBranchingModule" "evalragraphnode2" "InConsumerAgentEvalRAModule2" "decision" "graphedge2"] ["link" "InMainBranchingModule" "evalragraphnode2" "InConsumerAgentActionModule2" "adopted" "graphedge2"] ["link" "InMainBranchingModule" "evalragraphnode2" "InConsumerAgentActionModule2" "impeded" "graphedge2"]]
                  } 
                  {
                    :label "DecisionMakingDeciderModule" 
                    :set "set_InDecisionMakingDeciderModule2_evalragraphnode2" 
                    :description "todo" 
                    :tags [["InDecisionMakingDeciderModule2" "evalragraphnode2" "forceEvaluation"] ["link" "InDecisionMakingDeciderModule2" "evalragraphnode2" "InConsumerAgentBoolModule2" "finCheck" "graphedge2"] ["link" "InDecisionMakingDeciderModule2" "evalragraphnode2" "InConsumerAgentCalculationModule2" "threshold" "graphedge2"] ["link" "InDecisionMakingDeciderModule2" "evalragraphnode2" "InConsumerAgentCalculationModule2" "utility" "graphedge2"]]
                  }
                ]
              } 
              {
                :label "Reevaluierungsmodule" 
                :description "todo" 
                :sections [
                  {
                    :label "InReevaluatorModule" 
                    :set "set_InReevaluatorModule_reevalgraphnode2" 
                    :description "todo" 
                    :tags [["link" "InReevaluatorModule" "reevalgraphnode2" "InConsumerAgentModule2" "input" "graphedge2"]]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  } 
  {
    :label "Räumliche Modell" 
    :description "Definiert das räumliche Modell und zugehörige Komponenten." 
    :sections [
      {
        :label "Modell" 
        :description "Definiert das räumliche Modell." 
        :sections [
          {
            :label "Space2D" 
            :set "set_InSpace2D" 
            :description "Nutzt ein 2D-Modell mit der gewünschten Metrik." 
            :tags [["InSpace2D" "useManhatten"] ["InSpace2D" "useEuclid"] ["InSpace2D" "useEuclid2"] ["InSpace2D" "useMaximum"] ["InSpace2D" "useHaversineM"] ["InSpace2D" "useHaversineKM"]]
          }
        ]
      } 
      {
        :label "Verteilungsfunktionen" 
        :description "Ermöglicht es die räumlichen Verteilungsfunktionen zu definieren." 
        :sections [
          {
            :label "Dateibezogen" 
            :description "Ermöglicht es räumliche Verteilungsfunktionen zu definieren, deren Daten aus Dateien geladen werden." 
            :sections [
              {
                :label "Gelesene Positionen" 
                :description "Ermöglicht es räumliche Verteilungsfunktionen zu definieren, deren Daten aus Dateien geladen werden. Die Positionen werden dabei ebenfalls aus den Dateien gelesen." 
                :sections [
                  {
                    :label "Unzugeordnet" 
                    :set "set_InFileBasedSpatialInformationSupplier" 
                    :description "Die Daten werden ohne weitere Berücksichtigungen verwendet." 
                    :tags [["link" "InFileBasedSpatialInformationSupplier" "InAttributeName" "xPositionKey"] ["link" "InFileBasedSpatialInformationSupplier" "InAttributeName" "yPositionKey"] ["link" "InFileBasedSpatialInformationSupplier" "InAttributeName" "idKey"] ["link" "InFileBasedSpatialInformationSupplier" "InSpatialTableFile" "file"]]
                  } 
                  {
                    :label "Zugeordnet" 
                    :set "set_InFileBasedSelectSpatialInformationSupplier" 
                    :description "Die Daten werden, basierend auf einem gewünschtem Attribut, zugeordnet. Die Zuordnung basiert dabei auf Basis des Bezeichners der Agentengruppen." 
                    :tags [["link" "InFileBasedSelectSpatialInformationSupplier" "InAttributeName" "xPositionKey"] ["link" "InFileBasedSelectSpatialInformationSupplier" "InAttributeName" "yPositionKey"] ["link" "InFileBasedSelectSpatialInformationSupplier" "InAttributeName" "idKey"] ["link" "InFileBasedSelectSpatialInformationSupplier" "InSpatialTableFile" "file"] ["link" "InFileBasedSelectSpatialInformationSupplier" "InAttributeName" "selectKey"]]
                  } 
                  {
                    :label "Zugeordnet und gewichtet" 
                    :set "set_InFileBasedSelectGroupSpatialInformationSupplier" 
                    :description "Die Daten werden, basierend auf einem gewünschtem Attribut, zugeordnet. Die Zuordnung basiert dabei auf Basis des Bezeichners der Agentengruppen. Zusätzlich wird ein Gruppierungsattribut genutzt, um die Daten zu wichten." 
                    :tags [["link" "InFileBasedSelectGroupSpatialInformationSupplier" "InAttributeName" "xPositionKey"] ["link" "InFileBasedSelectGroupSpatialInformationSupplier" "InAttributeName" "yPositionKey"] ["link" "InFileBasedSelectGroupSpatialInformationSupplier" "InAttributeName" "idKey"] ["link" "InFileBasedSelectGroupSpatialInformationSupplier" "InSpatialTableFile" "file"] ["link" "InFileBasedSelectGroupSpatialInformationSupplier" "InAttributeName" "selectKey"] ["link" "InFileBasedSelectGroupSpatialInformationSupplier" "InAttributeName" "groupKey"]]
                  } 
                  {
                    :label "PVact - Milieu" 
                    :set "set_InFileBasedPVactMilieuSupplier" 
                    :description "Die Daten werden, basierend auf dem Milieu, zugeordnet." 
                    :tags [["link" "InFileBasedPVactMilieuSupplier" "InSpatialTableFile" "file"]]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  } 
  {
    :label "Zeitliche Modell" 
    :description "Definiert das zeitliche Modell. Es muss immer genau ein Modell definiert sein." 
    :sections [
      {
        :label "Diskret" 
        :set "set_InUnitStepDiscreteTimeModel" 
        :description "Stellt das diskreze Zeitmodell ein. Dabei ist zu beachten, dass nur eine Zeiteinheit ausgewählt werden darf." 
        :tags [["InUnitStepDiscreteTimeModel" "amountOfTime"] ["InUnitStepDiscreteTimeModel" "useMs"] ["InUnitStepDiscreteTimeModel" "useSec"] ["InUnitStepDiscreteTimeModel" "useMin"] ["InUnitStepDiscreteTimeModel" "useH"] ["InUnitStepDiscreteTimeModel" "useD"] ["InUnitStepDiscreteTimeModel" "useW"] ["InUnitStepDiscreteTimeModel" "useM"]]
      }
    ]
  } 
  {
    :label "Submodule" 
    :description "Einstellungen für Submodule" 
    :sections [
      {
        :label "OptAct" 
        :description "Modul mit Testparametern für die Kopplung." 
        :sections [
          {
            :label "Set" 
            :description "Hier sind Sets." 
            :sections [
              {
                :label "Kundengruppen" 
                :set "set_side_cust" 
                :description "Hier sind Kundengruppen." 
                :tags [["S" "DS"] ["kg" "modifier"] ["IuO" "ESector" "CustSide"]]
              } 
              {
                :label "Strom-Verbrauchertechnologie" 
                :set "set_load_DS_E" 
                :description "Hier sind Strom-Verbrauchertechnologie" 
                :tags [["L" "DS" "E"]]
              } 
              {
                :label "Stromspeicher" 
                :set "set_tech_DES_ES" 
                :description "Hier sind Stromspeicher." 
                :tags [["Inc" "PS" "ES"]]
              } 
              {
                :label "PV" 
                :set "set_tech_DES_PV" 
                :description "Hier sind PV." 
                :tags [["A" "DES" "PV"]]
              }
            ]
          } 
          {
            :label "Skalare und einfache Zeitreihen" 
            :description "Hier sind die skalaren Werte und einfache Zeitreihen" 
            :sections [
              {
                :label "Skalare" 
                :description "Hier stehen skalare Werte" 
                :tags [["Tax" "PS" "vat"] ["X" "MS" "DE" "country"] ["X" "MS" "CH" "country"]]
              } 
              {
                :label "Zeitreihen" 
                :description "Hier stehen einfache Zeitreihen" 
                :tags [["C" "MS" "E"]]
              }
            ]
          } 
          {
            :label "Link" 
            :description "Hier stehen Tables-Einträge." 
            :sections [
              {
                :label "Table" 
                :set "set_tech_DES_ES" 
                :description "Hier stehen primitive Tables-Einträge." 
                :tags [["SOH" "pss" "sector"]]
              } 
              {
                :label "TableWithTimeSeries" 
                :set "set_load_DS_E" 
                :description "Hier stehen Zeitreihen als Tables-Einträge." 
                :tags [["F" "E" "EGrid" "energy"]]
              }
            ]
          } 
          {
            :label "Agentengruppen für Graphviz" 
            :set "set_AgentGroup" 
            :description "Agentengruppe, welche im Graphen dargestellt werden sollen." 
            :tags [["AgentGroup" "numberOfAgents"] ["link" "AgentGroup" "GraphvizColor" "agentColor"]]
          } 
          {
            :label "Graphviz" 
            :description "Graphviz Einstellungen" 
            :sections [
              {
                :label "Topologie" 
                :description "unterstützte Topologien" 
                :sections [
                  {
                    :label "Watts-Strogatz-Model" 
                    :set "set_IWattsStrogatzModel" 
                    :description "Watts-Strogatz-Model" 
                    :tags [["IWattsStrogatzModel" "wsmK"] ["IWattsStrogatzModel" "wsmBeta"] ["IWattsStrogatzModel" "wsmSelfReferential"] ["IWattsStrogatzModel" "wsmSeed"] ["IWattsStrogatzModel" "wsmUseThis"]]
                  } 
                  {
                    :label "Freie Topologie" 
                    :set "set_IFreeMultiGraphTopology" 
                    :description "Freie Topologie" 
                    :tags [["IFreeMultiGraphTopology" "ftEdgeCount"] ["IFreeMultiGraphTopology" "ftSelfReferential"] ["IFreeMultiGraphTopology" "ftSeed"] ["IFreeMultiGraphTopology" "ftUseThis"]]
                  }
                ]
              } 
              {
                :label "Farben" 
                :set "set_GraphvizColor" 
                :description "Farben, welche von Graphviz bei der Grapherstellung genutzt werden sollen." 
                :tags [["GraphvizColor" "rgba"]]
              }
            ]
          }
        ]
      }
    ]
  } 
  {
    :label "Develop" 
    :description "Testoptionen" 
    :sections [
      {
        :label "Testdaten" 
        :description "Testdaten" 
        :sections [
          {
            :label "Einfache Testdaten" 
            :set "set_InTestData" 
            :description "Testdaten" 
            :tags [["InTestData" "testValue1"] ["InTestData" "testValue2"] ["InTestData" "value01"] ["InTestData" "value02"] ["InTestData" "value11"] ["InTestData" "value12"] ["InTestData" "value13"] ["InTestData" "value14"] ["InTestData" "value21"] ["InTestData" "value22"] ["InTestData" "value23"] ["InTestData" "value24"] ["InTestData" "value25"] ["InTestData" "value26"] ["InTestData" "value27"] ["InTestData" "sensi1"] ["InTestData" "sensi2"] ["InTestData" "sensi3"]]
          }
        ]
      } 
      {
        :label "DEPRECATED" 
        :description "..." 
        :sections [
          {
            :label "ErgebnisvisualisierungOLD" 
            :description "Hier kann die Ergebnisvisualisierung konfiguriert werden. Der Bezeichner für die Setelemente wird dabei als Basisname verwendet. Wird zum Beispiel eine Visualisierung mittels gnuplot und dem Namen 'Ergebnis' definiert, werden folgende drei Dateien erstellt: Ergebnis.csv (Daten), Ergebnis.gnu (Skript) und Ergebnis.png (Bild). Es kann zusätzlich individuell eingestellt werden, welche Dateien gespeichert und zum Download angeboten werden können." 
            :sections [
              {
                :label "Benutzerdefiniert" 
                :set "set_InGenericOutputImage" 
                :description "Hier kann für die Bilderzeugung das entsprechende Programm mittels 'Visualisierungsprogramm' individuell eingestellt werden. Der Bezeichner wird dabei als Basisname verwendet. Wird beispielsweise eine Visualisierung mit dem Namen 'Ergebnis' definiert, werdem für gnuplot Ergebnis.csv (Daten), Ergebnis.gnu (Skript) und Ergebnis.png (Bild) erstellt. Für R werden Ergebnis.csv (Daten), Ergebnis.R (Skript) und Ergebnis.png (Bild) erstellt" 
                :tags [["InGenericOutputImage" "useGnuplot"] ["InGenericOutputImage" "useR"] ["InGenericOutputImage" "annualZip"] ["InGenericOutputImage" "annualZipWithReal"] ["InGenericOutputImage" "annualZipWithRealTotal"] ["InGenericOutputImage" "cumulativeAnnualPhase"] ["InGenericOutputImage" "cumulativeAnnualPhase2"] ["InGenericOutputImage" "annualInterest2D"] ["InGenericOutputImage" "annualPhaseOverview"] ["InGenericOutputImage" "storeScript"] ["InGenericOutputImage" "storeData"] ["InGenericOutputImage" "storeImage"] ["InGenericOutputImage" "imageWidth"] ["InGenericOutputImage" "imageHeight"] ["InGenericOutputImage" "linewidth"] ["link" "InGenericOutputImage" "InRealAdoptionDataFile" "realAdoptionDataFile"]]
              } 
              {
                :label "gnuplot" 
                :set "set_InGnuPlotOutputImage" 
                :description "Die hier definierten Bilder werden mittels gnuplot erstellt. Der Bezeichner für die Setelemente wird dabei als Basisname verwendet. Wird beispielsweise eine Visualisierung mit dem Namen 'Ergebnis' definiert, werdem Ergebnis.csv (Daten), Ergebnis.gnu (Skript) und Ergebnis.png (Bild) erstellt." 
                :tags [["InGnuPlotOutputImage" "annualZip"] ["InGnuPlotOutputImage" "annualZipWithReal"] ["InGnuPlotOutputImage" "annualZipWithRealTotal"] ["InGnuPlotOutputImage" "cumulativeAnnualPhase"] ["InGnuPlotOutputImage" "cumulativeAnnualPhase2"] ["InGnuPlotOutputImage" "annualInterest2D"] ["InGnuPlotOutputImage" "annualPhaseOverview"] ["InGnuPlotOutputImage" "storeScript"] ["InGnuPlotOutputImage" "storeData"] ["InGnuPlotOutputImage" "storeImage"] ["InGnuPlotOutputImage" "imageWidth"] ["InGnuPlotOutputImage" "imageHeight"] ["InGnuPlotOutputImage" "linewidth"] ["link" "InGnuPlotOutputImage" "InRealAdoptionDataFile" "realAdoptionDataFile"]]
              } 
              {
                :label "R" 
                :set "set_InROutputImage" 
                :description "Die hier definierten Bilder werden mittels R erstellt. Der Bezeichner für die Setelemente wird dabei als Basisname verwendet. Wird beispielsweise eine Visualisierung mit dem Namen 'Ergebnis' definiert, werdem Ergebnis.csv (Daten), Ergebnis.R (Skript) und Ergebnis.png (Bild) erstellt." 
                :tags [["InROutputImage" "annualZip"] ["InROutputImage" "annualZipWithReal"] ["InROutputImage" "annualZipWithRealTotal"] ["InROutputImage" "cumulativeAnnualPhase"] ["InROutputImage" "cumulativeAnnualPhase2"] ["InROutputImage" "annualInterest2D"] ["InROutputImage" "annualPhaseOverview"] ["InROutputImage" "storeScript"] ["InROutputImage" "storeData"] ["InROutputImage" "storeImage"] ["InROutputImage" "imageWidth"] ["InROutputImage" "imageHeight"] ["InROutputImage" "linewidth"] ["link" "InROutputImage" "InRealAdoptionDataFile" "realAdoptionDataFile"]]
              }
            ]
          } 
          {
            :label "Datenausgabe" 
            :description "Hier kann die Datenausgabe konfiguriert werden." 
            :tags [["InGeneral" "logResultAdoptionsAll"] ["InGeneral" "logPerformance"] ["InGeneral" "logPhaseOverview"] ["InGeneral" "logInterest"] ["InGeneral" "logEvaluation"] ["InGeneral" "evaluationBucketSize"] ["InGeneral" "logAllEvaluation"] ["InGeneral" "logFinancialComponent"]]
          } 
          {
            :label "ProzessmodellALT" 
            :description "Definiert das Prozessmodell in IRPact. Aktuell darf nur ein Modell existieren." 
            :sections [
              {
                :label "Relative Agreement" 
                :set "set_InRAProcessModel" 
                :tags [["InRAProcessModel" "skipAwareness"] ["InRAProcessModel" "skipFeasibility"] ["InRAProcessModel" "forceEvaluate"] ["InRAProcessModel" "a"] ["InRAProcessModel" "b"] ["InRAProcessModel" "c"] ["InRAProcessModel" "d"] ["InRAProcessModel" "aWeight"] ["InRAProcessModel" "bWeight"] ["InRAProcessModel" "cWeight"] ["InRAProcessModel" "dWeight"] ["InRAProcessModel" "adopterPoints"] ["InRAProcessModel" "interestedPoints"] ["InRAProcessModel" "awarePoints"] ["InRAProcessModel" "unknownPoints"] ["InRAProcessModel" "logisticFactor"] ["InRAProcessModel" "speedOfConvergence"] ["InRAProcessModel" "attitudeGap"] ["InRAProcessModel" "chanceNeutral"] ["InRAProcessModel" "chanceConvergence"] ["InRAProcessModel" "chanceDivergence"] ["InRAProcessModel" "weightFT"] ["InRAProcessModel" "weightNPV"] ["InRAProcessModel" "weightSocial"] ["InRAProcessModel" "weightLocal"] ["InRAProcessModel" "communicationFactor"] ["InRAProcessModel" "rewireFactor"] ["InRAProcessModel" "adoptionCertaintyBase"] ["InRAProcessModel" "adoptionCertaintyFactor"] ["link" "InRAProcessModel" "InRAProcessPlanNodeFilterScheme" "nodeFilterScheme"] ["link" "InRAProcessModel" "InPVFile" "pvFile"] ["link" "InRAProcessModel" "InUncertainty" "uncertainties"] ["link" "InRAProcessModel" "InNewProductHandler" "newProductHandlers"]]
              } 
              {
                :label "[NICHT NUTZEN - VERALTET] Modulares Relative Agreement" 
                :set "set_InModularRAProcessModel" 
                :description "todo" 
                :tags [["InModularRAProcessModel" "speedOfConvergence"] ["InModularRAProcessModel" "attitudeGap"] ["InModularRAProcessModel" "chanceNeutral"] ["InModularRAProcessModel" "chanceConvergence"] ["InModularRAProcessModel" "chanceDivergence"] ["link" "InModularRAProcessModel" "InEvaluableComponent" "interestComponent"] ["link" "InModularRAProcessModel" "InEvaluableComponent" "feasibilityComponent"] ["link" "InModularRAProcessModel" "InEvaluableComponent" "decisionMakingComponent"] ["link" "InModularRAProcessModel" "InEvaluableComponent" "actionComponent"] ["link" "InModularRAProcessModel" "InUncertainty" "uncertainties"]] 
                :sections [
                  {
                    :label "Komponenten" 
                    :description "todo" 
                    :sections [
                      {
                        :label "Standard Interest" 
                        :set "set_InDefaultHandleInterestComponent" 
                        :description "todo" 
                        :tags [["InDefaultHandleInterestComponent" "adopterPoints"] ["InDefaultHandleInterestComponent" "interestedPoints"] ["InDefaultHandleInterestComponent" "awarePoints"] ["InDefaultHandleInterestComponent" "unknownPoints"]]
                      } 
                      {
                        :label "Standard Feasibility" 
                        :set "set_InDefaultHandleFeasibilityComponent" 
                        :description "todo" 
                        :tags [["InDefaultHandleFeasibilityComponent" "adopterPoints"] ["InDefaultHandleFeasibilityComponent" "interestedPoints"] ["InDefaultHandleFeasibilityComponent" "awarePoints"] ["InDefaultHandleFeasibilityComponent" "unknownPoints"]]
                      } 
                      {
                        :label "Standard Decision Making" 
                        :set "set_InDefaultHandleDecisionMakingComponent" 
                        :description "todo" 
                        :tags [["InDefaultHandleDecisionMakingComponent" "a"] ["InDefaultHandleDecisionMakingComponent" "b"] ["InDefaultHandleDecisionMakingComponent" "c"] ["InDefaultHandleDecisionMakingComponent" "d"] ["InDefaultHandleDecisionMakingComponent" "weightFT"] ["InDefaultHandleDecisionMakingComponent" "weightNPV"] ["InDefaultHandleDecisionMakingComponent" "weightSocial"] ["InDefaultHandleDecisionMakingComponent" "weightLocal"] ["InDefaultHandleDecisionMakingComponent" "logisticFactor"] ["link" "InDefaultHandleDecisionMakingComponent" "InPVFile" "pvFile"] ["link" "InDefaultHandleDecisionMakingComponent" "InRAProcessPlanNodeFilterScheme" "nodeFilterScheme"]]
                      } 
                      {
                        :label "Standard Action" 
                        :set "set_InDefaultDoActionComponent" 
                        :description "todo" 
                        :tags [["InDefaultDoActionComponent" "adopterPoints"] ["InDefaultDoActionComponent" "interestedPoints"] ["InDefaultDoActionComponent" "awarePoints"] ["InDefaultDoActionComponent" "unknownPoints"]]
                      } 
                      {
                        :label "Summe über Attribute" 
                        :set "set_InSumAttributeComponent" 
                        :description "todo" 
                        :tags [["InSumAttributeComponent" "weight"] ["link" "InSumAttributeComponent" "InAttributeName" "attributeNames"]]
                      } 
                      {
                        :label "Summe über Komponenten (Zwischenkomponente)" 
                        :set "set_InSumIntermediateComponent" 
                        :description "todo" 
                        :tags [["InSumIntermediateComponent" "weight"] ["link" "InSumIntermediateComponent" "InValueComponent" "components"]]
                      } 
                      {
                        :label "Summe über Komponenten (Evaluierungskomponente)" 
                        :set "set_InSumThresholdComponent" 
                        :description "todo" 
                        :tags [["InSumThresholdComponent" "weight"] ["InSumThresholdComponent" "threshold"] ["link" "InSumThresholdComponent" "InValueComponent" "components"]]
                      } 
                      {
                        :label "Keine Evaluierung" 
                        :set "set_InDoNothingComponent" 
                        :description "todo" 
                        :tags [["InDoNothingComponent" "placeholder"]]
                      }
                    ]
                  }
                ]
              } 
              {
                :label "Modulares Prozessmodell" 
                :description "Ermöglicht die Konstruktion von modularen Prozessmodellen. Dabei wird zwischen zwei Modultypen unterschieden: Berechnungsmodule und Evaluierungsmodule. Berechnungsmodule haben als Ergebnis einen Zahlwert. Evaluierungsmodule haben als Ergebnis einen Adoptionsstatus. Dieser kann sein: adoptiert, Adoption nicht möglich, Adoption nicht entschieden. Der zu letzt genannte Zustand ermöglicht die Weiterführung im nächsten Iterationsschritt." 
                :sections [
                  {
                    :label "Modell" 
                    :description "Konfiguration des Modells. Das Modell ist der Schnittpunkt zwischen der Simulation und dem modularem System." 
                    :sections [
                      {
                        :label "Einfaches modulares Modell" 
                        :set "set_InConsumerAgentMPMWithAdoptionHandler" 
                        :description "Das einfache modulare Modell bestitzt exakt ein Startmodul. Es ist zu beachten, dass nur ein Modul ausgewählt ist." 
                        :tags [["link" "InConsumerAgentMPMWithAdoptionHandler" "InConsumerAgentEvaluationModule" "startModule"] ["link" "InConsumerAgentMPMWithAdoptionHandler" "InNewProductHandler" "newProductHandlers"]]
                      }
                    ]
                  } 
                  {
                    :label "Module" 
                    :description "Konfiguration der Module." 
                    :sections [
                      {
                        :label "Berechnungsmodule" 
                        :description "Hier werden die möglichen Berechungsmodule aufgeführt und konfiguriert. Berechnungsmodule haben als Ergebnis einen Zahlwert." 
                        :sections [
                          {
                            :label "Addierer" 
                            :set "set_InAddModule_calcgraphnode" 
                            :description "Einfacher Addierer, welcher zwei Eingaben addiert und das Ergebnis zusätzlich wichtet: output = (input1 + input2) * weight." 
                            :tags [["InAddModule" "calcgraphnode" "weight"] ["link" "InAddModule" "calcgraphnode" "InConsumerAgentCalculationModule" "first" "graphedge"] ["link" "InAddModule" "calcgraphnode" "InConsumerAgentCalculationModule" "second" "graphedge"]]
                          } 
                          {
                            :label "Eingabeattribut" 
                            :set "set_InAttributeInputModule_inputgraphnode" 
                            :description "Dieses Modul ermöglicht es ein Agentenattribut als Eingabewert zu verwenden und es zusätzlich noch zu wichten. Es darf nur ein Attribut ausgewählt werden." 
                            :tags [["InAttributeInputModule" "inputgraphnode" "weight"] ["link" "InAttributeInputModule" "inputgraphnode" "InAttributeName" "attribute"]]
                          } 
                          {
                            :label "Disaggregierte Kaufkraft" 
                            :set "set_InDisaggregatedFinancialModule_inputgraphnode" 
                            :description "Gibt die disaggregierte Kaufkraft zurück. Dabei handelt es sich nicht um die direkte Kaufkraft, sonden die mittels logistischer Funktion berechnete: output = logistic( logisticFactor * (agentPP - avgPP) ) * weight. Dabei ist \"agentPP\" die eigentliche Kaufkraft des Agenten und \"avgPP\" der Durchschnittswert aller Agenten." 
                            :tags [["InDisaggregatedFinancialModule" "inputgraphnode" "weight"] ["InDisaggregatedFinancialModule" "inputgraphnode" "logisticFactor"]]
                          } 
                          {
                            :label "Disaggregierter Barwert" 
                            :set "set_InDisaggregatedNPVModule_inputgraphnode" 
                            :description "Gibt den disaggregieren Barwert zurück. Dabei handelt es sich nicht um den direkten Barwert, sonden den mittels logistischer Funktion berechneten: output = logistic( logisticFactor * (agentNPV - avgNPV) ) * weight. Dabei ist \"agentNPV\" der eigentliche Barwert des Agenten und \"avgNPV\" der Durchschnittsbarwert aller Agenten." 
                            :tags [["InDisaggregatedNPVModule" "inputgraphnode" "weight"] ["InDisaggregatedNPVModule" "inputgraphnode" "logisticFactor"] ["link" "InDisaggregatedNPVModule" "inputgraphnode" "InPVFile" "pvFile"]]
                          } 
                          {
                            :label "Umweltbewusstsein" 
                            :set "set_InEnvironmentalConcernModule_inputgraphnode" 
                            :description "Dieses Modul nutzt das Agentenattribut für Umweltbewusstsein (environmental_concern) als Rückgabewert: output = environmental_concern * weight" 
                            :tags [["InEnvironmentalConcernModule" "inputgraphnode" "weight"]]
                          } 
                          {
                            :label "Finanzielle Komponente" 
                            :set "set_InFinancialComponentModule_inputgraphnode" 
                            :description "Berechnet die finanzielle Komponente bestehend aus Barwert und Kaufkraft: output = ((logistic(logisticFactor * (agentNPV - avgNPV)) * weightNPV) + (logistic(logisticFactor * (agentPP - avgPP) ) * weightPP)) * weight." 
                            :tags [["InFinancialComponentModule" "inputgraphnode" "weight"] ["InFinancialComponentModule" "inputgraphnode" "weightFT"] ["InFinancialComponentModule" "inputgraphnode" "weightNPV"] ["InFinancialComponentModule" "inputgraphnode" "logisticFactor"] ["link" "InFinancialComponentModule" "inputgraphnode" "InPVFile" "pvFile"]]
                          } 
                          {
                            :label "Logistikfunktion" 
                            :set "set_InLogisticModule_calcgraphnode" 
                            :description "Wendet die Logistikfunktion auf die Eingabe an und gibt das Ergebnis gewichtet zurück: output = logistic(input) * weight." 
                            :tags [["InLogisticModule" "calcgraphnode" "weight"] ["link" "InLogisticModule" "calcgraphnode" "InConsumerAgentCalculationModule" "input" "graphedge"]]
                          } 
                          {
                            :label "Novelty seeking" 
                            :set "set_InNoveltySeekingModule_inputgraphnode" 
                            :description "Dieses Modul nutzt das Agentenattribut für Novelty seeking (novelty_seeking) als Rückgabewert: output = novelty_seeking * weight" 
                            :tags [["InNoveltySeekingModule" "inputgraphnode" "weight"]]
                          } 
                          {
                            :label "Barwert" 
                            :set "set_InNPVModule_inputgraphnode" 
                            :description "Gibt den eigentlichen Barwert des Agenten zurück: output = agentNPV * weight" 
                            :tags [["InNPVModule" "inputgraphnode" "weight"] ["link" "InNPVModule" "inputgraphnode" "InPVFile" "pvFile"]]
                          } 
                          {
                            :label "Multiplizierer" 
                            :set "set_InProductModule_calcgraphnode" 
                            :description "Einfacher Summierer, welcher belieb viele Eingaben addiert und das Ergebnis zusätzlich wichtet: output = PRODUKT(input) * weight. (\"PRODUKT\" steht hierbei für die Produktfunktion.)" 
                            :tags [["InProductModule" "calcgraphnode" "weight"] ["link" "InProductModule" "calcgraphnode" "InConsumerAgentCalculationModule" "inputModules" "graphedge"]]
                          } 
                          {
                            :label "Kaufkraft" 
                            :set "set_InPurchasePowerModule_inputgraphnode" 
                            :description "Dieses Modul nutzt das Agentenattribut für Kaufkraft (KK_Euro) als Rückgabewert: output = KK_Euro * weight" 
                            :tags [["InPurchasePowerModule" "inputgraphnode" "weight"]]
                          } 
                          {
                            :label "Lokaler Adopteranteil" 
                            :set "set_InShareOfAdopterInLocalNetworkModule_inputgraphnode" 
                            :description "Dieses Modul berechnet den Anteil der Adopter im lokalen Netzwerk: output = shareOfAdopter * weight. Das lokale Netz wird dabei über ein Berechnungsschema bzw. Filter bestimmt." 
                            :tags [["InShareOfAdopterInLocalNetworkModule" "inputgraphnode" "weight"] ["link" "InShareOfAdopterInLocalNetworkModule" "inputgraphnode" "InRAProcessPlanNodeFilterScheme" "nodeFilterScheme"]]
                          } 
                          {
                            :label "Sozialer Adopteranteil" 
                            :set "set_InShareOfAdopterInSocialNetworkModule_inputgraphnode" 
                            :description "Dieses Modul berechnet den Anteil der Adopter im sozialen Netzwerk: output = shareOfAdopter * weight. Im sozialen Netzwerk sind alle Agenten, welche enweder eine Kante zum entsprechenden Agenten besitzen oder dieser zu ihnen." 
                            :tags [["InShareOfAdopterInSocialNetworkModule" "inputgraphnode" "weight"]]
                          } 
                          {
                            :label "Soziale Komponente" 
                            :set "set_InSocialComponentModule_inputgraphnode" 
                            :description "Dieses Modul berechnet die soziale Komponente, bestehend aus dem Anteil der Adopter im lokalen und sozialen Netzwerk: output = ((shareOfAdopterLocal * weightLocal) + (shareOfAdopterSocial * weightSocial)) * weight." 
                            :tags [["InSocialComponentModule" "inputgraphnode" "weight"] ["InSocialComponentModule" "inputgraphnode" "socialWeight"] ["InSocialComponentModule" "inputgraphnode" "localWeight"] ["link" "InSocialComponentModule" "inputgraphnode" "InRAProcessPlanNodeFilterScheme" "nodeFilterScheme"]]
                          } 
                          {
                            :label "Summierer" 
                            :set "set_InSumModule_calcgraphnode" 
                            :description "Einfacher Summierer, welcher belieb viele Eingaben addiert und das Ergebnis zusätzlich wichtet: output = SUMME(input) * weight. (\"SUMME\" steht hierbei für die Summenfunktion.)" 
                            :tags [["InSumModule" "calcgraphnode" "weight"] ["link" "InSumModule" "calcgraphnode" "InConsumerAgentCalculationModule" "inputModules" "graphedge"]]
                          } 
                          {
                            :label "Gewichteter Addierer" 
                            :set "set_InWeightedAddModule_calcgraphnode" 
                            :description "Addierer, welcher zwei Eingaben separat wichtet und addiert. Anschließend wird das Gesamtergebnis ebenfalls gewichtet: output = ((input1 * weight1) + (input2 * weight2)) * weight." 
                            :tags [["InWeightedAddModule" "calcgraphnode" "weight"] ["InWeightedAddModule" "calcgraphnode" "weight1"] ["InWeightedAddModule" "calcgraphnode" "weight2"] ["link" "InWeightedAddModule" "calcgraphnode" "InConsumerAgentCalculationModule" "first" "graphedge"] ["link" "InWeightedAddModule" "calcgraphnode" "InConsumerAgentCalculationModule" "second" "graphedge"]]
                          } 
                          {
                            :label "Wichtung" 
                            :set "set_InWeightedModule_calcgraphnode" 
                            :description "Dieses Modul multiplizert die Eingabe mit einem Wichtungsfaktor: output = input * weight." 
                            :tags [["InWeightedModule" "calcgraphnode" "weight"] ["link" "InWeightedModule" "calcgraphnode" "InConsumerAgentCalculationModule" "input" "graphedge"]]
                          }
                        ]
                      } 
                      {
                        :label "Evaluierungsmodule" 
                        :description "Evaluierungsmodule haben als Ergebnis einen Adoptionsstatus. Dieser kann sein: adoptiert, Adoption nicht möglich, Adoption nicht entschieden. Der zu letzt genannte Zustand ermöglicht die Weiterführung im nächsten Iterationsschritt." 
                        :sections [
                          {
                            :label "Verzweigungsmodul" 
                            :set "set_InBranchModule_evalgraphnode" 
                            :description "Dieses Modul ermöglicht es, je nach Ergebnis des Eingabemoduls, unterschiedliche Folgemodule aufzurufen." 
                            :tags [["link" "InBranchModule" "evalgraphnode" "InConsumerAgentEvaluationModule" "inputModule" "graphedge"] ["link" "InBranchModule" "evalgraphnode" "InConsumerAgentEvaluationModule" "onAdoptModule" "graphedge"] ["link" "InBranchModule" "evalgraphnode" "InConsumerAgentEvaluationModule" "onImpededModule" "graphedge"] ["link" "InBranchModule" "evalgraphnode" "InConsumerAgentEvaluationModule" "onInProcessModule" "graphedge"]]
                          } 
                          {
                            :label "[Standard] Aktion" 
                            :set "set_InDefaultActionModule_evalgraphnode" 
                            :description "Dieses Modul implementiert die \"Standardaktionen\" des klassischen PV-Prozessmodells. Dabei handelt es sich um die Aktionen \"Kommunikation\" und \"Rewiring\". Dieses Modul gibt als Ergebnis immer \"Adoption nicht entschieden\" zurück. Die Wahrscheinlichkeiten von \"Kommunikation\" und \"Rewiring\" sind von den jeweiligen Agentenattributen abhängig." 
                            :tags [["InDefaultActionModule" "evalgraphnode" "adopterPoints"] ["InDefaultActionModule" "evalgraphnode" "interestedPoints"] ["InDefaultActionModule" "evalgraphnode" "awarePoints"] ["InDefaultActionModule" "evalgraphnode" "unknownPoints"] ["InDefaultActionModule" "evalgraphnode" "speedOfConvergence"] ["InDefaultActionModule" "evalgraphnode" "attitudeGap"] ["InDefaultActionModule" "evalgraphnode" "chanceNeutral"] ["InDefaultActionModule" "evalgraphnode" "chanceConvergence"] ["InDefaultActionModule" "evalgraphnode" "chanceDivergence"] ["link" "InDefaultActionModule" "evalgraphnode" "InUncertainty" "uncertainties"]]
                          } 
                          {
                            :label "[Standard] Decision Making" 
                            :set "set_InDefaultDecisionMakingModule_evalgraphnode" 
                            :description "Dieses Modul implementiert das komplette \"decision making\"-Phase des klassischen PV-Prozessmodells. Dieses Modul gibt als Ergebnis entweder \"adoptiert\" oder \"Adoption nicht möglich\" zurück." 
                            :tags [["InDefaultDecisionMakingModule" "evalgraphnode" "a"] ["InDefaultDecisionMakingModule" "evalgraphnode" "b"] ["InDefaultDecisionMakingModule" "evalgraphnode" "c"] ["InDefaultDecisionMakingModule" "evalgraphnode" "d"] ["InDefaultDecisionMakingModule" "evalgraphnode" "weightFT"] ["InDefaultDecisionMakingModule" "evalgraphnode" "weightNPV"] ["InDefaultDecisionMakingModule" "evalgraphnode" "weightSocial"] ["InDefaultDecisionMakingModule" "evalgraphnode" "weightLocal"] ["InDefaultDecisionMakingModule" "evalgraphnode" "logisticFactor"] ["link" "InDefaultDecisionMakingModule" "evalgraphnode" "InPVFile" "pvFile"] ["link" "InDefaultDecisionMakingModule" "evalgraphnode" "InRAProcessPlanNodeFilterScheme" "nodeFilterScheme"]]
                          } 
                          {
                            :label "[Standard] Feasibility" 
                            :set "set_InDefaultFeasibilityModule_evalgraphnode" 
                            :description "Dieses Modul implementiert die komplette \"feasibility\"-Phase des klassischen PV-Prozessmodells. Es gibt als Ergebnis immer \"Adoption nicht entschieden\" zurück. Zusätzlich führt es (falls nötig) die Standardaktionen \"Kommunikation\" und \"Rewiring\" aus. Die Wahrscheinlichkeiten von \"Kommunikation\" und \"Rewiring\" sind von den jeweiligen Agentenattributen abhängig." 
                            :tags [["InDefaultFeasibilityModule" "evalgraphnode" "adopterPoints"] ["InDefaultFeasibilityModule" "evalgraphnode" "interestedPoints"] ["InDefaultFeasibilityModule" "evalgraphnode" "awarePoints"] ["InDefaultFeasibilityModule" "evalgraphnode" "unknownPoints"] ["InDefaultFeasibilityModule" "evalgraphnode" "speedOfConvergence"] ["InDefaultFeasibilityModule" "evalgraphnode" "attitudeGap"] ["InDefaultFeasibilityModule" "evalgraphnode" "chanceNeutral"] ["InDefaultFeasibilityModule" "evalgraphnode" "chanceConvergence"] ["InDefaultFeasibilityModule" "evalgraphnode" "chanceDivergence"] ["link" "InDefaultFeasibilityModule" "evalgraphnode" "InUncertainty" "uncertainties"]]
                          } 
                          {
                            :label "[Standard] Interesse" 
                            :set "set_InDefaultInterestModule_evalgraphnode" 
                            :description "Dieses Modul implementiert die komplette \"interest\"-Phase des klassischen PV-Prozessmodells. Es gibt als Ergebnis immer \"Adoption nicht entschieden\" zurück. Zusätzlich führt es (falls nötig) die Standardaktionen \"Kommunikation\" und \"Rewiring\" aus. Die Wahrscheinlichkeiten von \"Kommunikation\" und \"Rewiring\" sind von den jeweiligen Agentenattributen abhängig." 
                            :tags [["InDefaultInterestModule" "evalgraphnode" "adopterPoints"] ["InDefaultInterestModule" "evalgraphnode" "interestedPoints"] ["InDefaultInterestModule" "evalgraphnode" "awarePoints"] ["InDefaultInterestModule" "evalgraphnode" "unknownPoints"] ["InDefaultInterestModule" "evalgraphnode" "speedOfConvergence"] ["InDefaultInterestModule" "evalgraphnode" "attitudeGap"] ["InDefaultInterestModule" "evalgraphnode" "chanceNeutral"] ["InDefaultInterestModule" "evalgraphnode" "chanceConvergence"] ["InDefaultInterestModule" "evalgraphnode" "chanceDivergence"] ["link" "InDefaultInterestModule" "evalgraphnode" "InUncertainty" "uncertainties"]]
                          } 
                          {
                            :label "[TESTMODUL] Testmodul" 
                            :set "set_InDoNothingModule_evalgraphnode" 
                            :description "Dieses Modul dient zum Testen der Aufrufe von Submodulen. Es gibt immer \"Adoption nicht entschieden\" zurück. Alle Arten von Modulen können als Eingabe dienen." 
                            :tags [["link" "InDoNothingModule" "evalgraphnode" "InConsumerAgentModule" "inputModule" "graphedge"]]
                          } 
                          {
                            :label "Filtermodul" 
                            :set "set_InFilterModule_evalgraphnode" 
                            :description "Dieses Modul filtert das Ergebnis des Eingabemodules. Das Folgemodul wird nur aufgerufen, wenn das Eingabemodul \"in process\" zurück gibt." 
                            :tags [["link" "InFilterModule" "evalgraphnode" "InConsumerAgentEvaluationModule" "inputModule" "graphedge"] ["link" "InFilterModule" "evalgraphnode" "InConsumerAgentEvaluationModule" "taskModule" "graphedge"]]
                          } 
                          {
                            :label "Direkte Statusrückgabe" 
                            :set "set_InSimpleGetPhaseModule_evalgraphnode" 
                            :description "Dieses Modul gibt den gewünschten Status zurück. Es finden keine Berechnungen oder Auswertungen statt. Das Modul kann somit als Platzhalter genutzt werden." 
                            :tags [["InSimpleGetPhaseModule" "evalgraphnode" "getAdopt"] ["InSimpleGetPhaseModule" "evalgraphnode" "getImpeded"] ["InSimpleGetPhaseModule" "evalgraphnode" "getInProcess"]]
                          } 
                          {
                            :label "Phasengerüst des PV-Prozessmodells" 
                            :set "set_InStageEvaluationModule_evalgraphnode" 
                            :description "Dieses Modul implementiert das Grundgerüst des PV-Prozessmodells. Es basiert auf den Prozessphasen: \"awareness\", \"feasibility\", \"decision making\", \"adopted\" und \"impeded\". Aktuell werden diese Phasen nur von den [Standard]-Modulen verändert." 
                            :tags [["link" "InStageEvaluationModule" "evalgraphnode" "InConsumerAgentEvaluationModule" "awarenessModule" "graphedge"] ["link" "InStageEvaluationModule" "evalgraphnode" "InConsumerAgentEvaluationModule" "feasibilityModule" "graphedge"] ["link" "InStageEvaluationModule" "evalgraphnode" "InConsumerAgentEvaluationModule" "decisionMakingModule" "graphedge"] ["link" "InStageEvaluationModule" "evalgraphnode" "InConsumerAgentEvaluationModule" "adoptedModule" "graphedge"] ["link" "InStageEvaluationModule" "evalgraphnode" "InConsumerAgentEvaluationModule" "impededModule" "graphedge"]]
                          } 
                          {
                            :label "Summierte grenzwertabhängige Evaluation" 
                            :set "set_InSumThresholdEvaluationModule_evalgraphnode" 
                            :description "Dieses Modul summiert die Berechnungswerte der Eingabemodule auf und gibt ein entsprechendes Evaluierungsergebnis aus. Dabei kann eingestellt werden, ob der Grenzwert als untere oder obere Grenze gehandhabt wird. Zusätzlich kann noch eingestellt werden, ob bei einer erfolgreichen Evaluierung das das Ergebnis \"adoptiert\" oder \"Adoption nicht entscheiden\" ist. Äquivalent kann bei einer erfolglosen Evaluierung das Ergebnis \"impeded\" oder \"Adoption nicht entscheiden\" sein. Es ist zu beachten, dass mindestens eine Eingabemodul existieren muss." 
                            :tags [["InSumThresholdEvaluationModule" "evalgraphnode" "threshold"] ["InSumThresholdEvaluationModule" "evalgraphnode" "acceptIfBelowThreshold"] ["InSumThresholdEvaluationModule" "evalgraphnode" "adoptIfAccepted"] ["InSumThresholdEvaluationModule" "evalgraphnode" "impededIfFailed"] ["link" "InSumThresholdEvaluationModule" "evalgraphnode" "InConsumerAgentCalculationModule" "input" "graphedge"]]
                          } 
                          {
                            :label "Grenzwertabhängige Evaluation" 
                            :set "set_InThresholdEvaluationModule_evalgraphnode" 
                            :description "Dieses Modul bestimmt das Evaluierungsergebnis basierend auf einem Grenzwert und dem Wert des Eingabemodules.. Dabei kann eingestellt werden, ob der Grenzwert als untere oder obere Grenze gehandhabt wird. Zusätzlich kann noch eingestellt werden, ob bei einer erfolgreichen Evaluierung das das Ergebnis \"adoptiert\" oder \"Adoption nicht entscheiden\" ist. Äquivalent kann bei einer erfolglosen Evaluierung das Ergebnis \"impeded\" oder \"Adoption nicht entscheiden\" sein. Es ist zu beachten, dass genau ein Eingabemodul existieren muss." 
                            :tags [["InThresholdEvaluationModule" "evalgraphnode" "threshold"] ["InThresholdEvaluationModule" "evalgraphnode" "acceptIfBelowThreshold"] ["InThresholdEvaluationModule" "evalgraphnode" "adoptIfAccepted"] ["InThresholdEvaluationModule" "evalgraphnode" "impededIfFailed"] ["link" "InThresholdEvaluationModule" "evalgraphnode" "InConsumerAgentCalculationModule" "input" "graphedge"]]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
]