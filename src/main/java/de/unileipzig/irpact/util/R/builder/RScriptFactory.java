package de.unileipzig.irpact.util.R.builder;

import de.unileipzig.irpact.util.R.builder.ggplot2.*;

import java.time.LocalDateTime;

/**
 * @author Daniel Abitz
 */
public final class RScriptFactory {

    private static final String SEP = ";";

    private RScriptFactory() {
    }

    private static Comment getAutoGenerated() {
        return new Comment("automatic generated script (" + LocalDateTime.now() + ")");
    }

    //=========================
    //line chart
    //=========================

    public static RScriptBuilder lineChart0(
            String argX, String argY, String argGrp,
            int height, int width, String units, int dpi,
            String xlab, String ylab, String grplab) {
        Comment autoComment = getAutoGenerated();
        Comment typeComment = new Comment("line chart v0");

        Args args = new Args("args", 2);

        Library lib = new Library("ggplot2");

        ReadDotCsv csv = new ReadDotCsv("inputdata");
        csv.setFileName(args.getNamedIndex(1));
        csv.setHeader(true);
        csv.setSep(SEP);
        csv.setColClasses(Element.NUMERIC, Element.CHARACTER, Element.NUMERIC);

        Ggplot plot = new Ggplot();
        plot.setData(csv.getReturnName());
        plot.aes().setX(argX);
        plot.aes().setY(argY);
        plot.aes().setGroup(argGrp);
        plot.aes().setColour(argGrp);

        GeomLine geomLine = new GeomLine();

        Labs labs = new Labs();
        labs.setX(xlab);
        labs.setY(ylab);
        labs.setColour(grplab);

        Ggsave save = new Ggsave();
        save.setFileName(args.getNamedIndex(2));
        save.setHeight(height);
        save.setWidth(width);
        save.setUnits(units);
        save.setDpi(dpi);

        RScriptBuilder builder = new RScriptBuilder();
        builder.setAutoNewLine(true);

        builder.add(autoComment);
        builder.add(typeComment);
        builder.newLine();
        builder.add(args);
        builder.newLine();
        builder.add(lib);
        builder.newLine();
        builder.add(csv);
        builder.addLinked(plot, geomLine, labs);
        builder.add(save);
        builder.devoff();

        return builder;
    }

    //=========================
    //interaction line chart
    //=========================

    public static RScriptBuilder interactionLineChart0(
            String argX, String argY, String argGrp, String argDistinct,
            int height, int width, String units, int dpi,
            String xLab, String yLab, String grpLab, String distrinctLab) {
        Comment autoComment = getAutoGenerated();
        Comment typeComment = new Comment("interaction line chart v0");

        Args args = new Args("args", 2);

        Library lib = new Library("ggplot2");

        ReadDotCsv csv = new ReadDotCsv("inputdata");
        csv.setFileName(args.getNamedIndex(1));
        csv.setHeader(true);
        csv.setSep(SEP);
        csv.setColClasses(Element.NUMERIC, Element.NUMERIC, Element.CHARACTER, Element.CHARACTER);

        Ggplot plot = new Ggplot();

        GeomLine geomLine = new GeomLine();
        geomLine.setData(csv.getReturnName());
        geomLine.aes().setX(argX);
        geomLine.aes().setY(argY);
        geomLine.aes().setGroupInteraction(argGrp, argDistinct);
        geomLine.aes().setColour(argGrp);
        geomLine.aes().setLinetype(argDistinct);

        Labs labs = new Labs();
        labs.setX(xLab);
        labs.setY(yLab);
        labs.setColour(grpLab);
        labs.setLinetype(distrinctLab);

        Ggsave save = new Ggsave();
        save.setFileName(args.getNamedIndex(2));
        save.setHeight(height);
        save.setWidth(width);
        save.setUnits(units);
        save.setDpi(dpi);

        RScriptBuilder builder = new RScriptBuilder();
        builder.setAutoNewLine(true);

        builder.add(autoComment);
        builder.add(typeComment);
        builder.newLine();
        builder.add(args);
        builder.newLine();
        builder.add(lib);
        builder.newLine();
        builder.add(csv);
        builder.addLinked(plot, geomLine, labs);
        builder.add(save);
        builder.devoff();

        return builder;
    }

    public static RScriptBuilder interactionLineChart1(
            String argX, String argY, String argGrp, String argDistinct,
            int height, int width, String units, int dpi,
            String firstLinetype, String secondLineType,
            String xLab, String yLab, String grpLab, String distrinctLab) {
        Comment autoComment = getAutoGenerated();
        Comment typeComment = new Comment("interaction line chart v1");

        Args args = new Args("args", 2);

        Library lib = new Library("ggplot2");

        ReadDotCsv csv = new ReadDotCsv("inputdata");
        csv.setFileName(args.getNamedIndex(1));
        csv.setHeader(true);
        csv.setSep(SEP);
        csv.setColClasses(Element.NUMERIC, Element.NUMERIC, Element.CHARACTER, Element.CHARACTER);

        Ggplot plot = new Ggplot();

        GeomLine geomLine = new GeomLine();
        geomLine.setData(csv.getReturnName());
        geomLine.aes().setX(argX);
        geomLine.aes().setY(argY);
        geomLine.aes().setGroupInteraction(argGrp, argDistinct);
        geomLine.aes().setColour(argGrp);
        geomLine.aes().setLinetype(argDistinct);

        Labs labs = new Labs();
        labs.setX(xLab);
        labs.setY(yLab);
        labs.setColour(grpLab);
        labs.setLinetype(distrinctLab);

        ScaleLinetypeManual scaleLinetypes = new ScaleLinetypeManual();
        scaleLinetypes.setValues(firstLinetype, secondLineType);

        Ggsave save = new Ggsave();
        save.setFileName(args.getNamedIndex(2));
        save.setHeight(height);
        save.setWidth(width);
        save.setUnits(units);
        save.setDpi(dpi);

        RScriptBuilder builder = new RScriptBuilder();
        builder.setAutoNewLine(true);

        builder.add(autoComment);
        builder.add(typeComment);
        builder.newLine();
        builder.add(args);
        builder.newLine();
        builder.add(lib);
        builder.newLine();
        builder.add(csv);
        builder.addLinked(plot, geomLine, scaleLinetypes, labs);
        builder.add(save);
        builder.devoff();

        return builder;
    }

    //=========================
    //stacked bar chart
    //=========================

    public static RScriptBuilder stackedBarChart0(
            String argX, String argY, String argFill,
            int height, int width, String units, int dpi,
            String xLab, String yLab, String fillLab) {
        Comment autoComment = getAutoGenerated();
        Comment typeComment = new Comment("stacked bar chart v0");

        Args args = new Args("args", 2);

        Library lib = new Library("ggplot2");

        ReadDotCsv csv = new ReadDotCsv("inputdata");
        csv.setFileName(args.getNamedIndex(1));
        csv.setHeader(true);
        csv.setSep(SEP);
        csv.setColClasses(Element.NUMERIC, Element.CHARACTER, Element.NUMERIC);

        Ggplot plot = new Ggplot();
        plot.setData(csv.getReturnName());
        plot.aes().setX(argX);
        plot.aes().setY(argY);
        plot.aes().setFill(argFill);

        GeomBar geomBar = new GeomBar();
        geomBar.setPosition(Element.STACK);
        geomBar.setStat(Element.IDENTITY);

        Labs labs = new Labs();
        labs.setX(xLab);
        labs.setY(yLab);
        labs.setFill(fillLab);

        Ggsave save = new Ggsave();
        save.setFileName(args.getNamedIndex(2));
        save.setHeight(height);
        save.setWidth(width);
        save.setUnits(units);
        save.setDpi(dpi);

        RScriptBuilder builder = new RScriptBuilder();
        builder.setAutoNewLine(true);

        builder.add(autoComment);
        builder.add(typeComment);
        builder.newLine();
        builder.add(args);
        builder.newLine();
        builder.add(lib);
        builder.newLine();
        builder.add(csv);
        builder.addLinked(plot, geomBar, labs);
        builder.add(save);
        builder.devoff();

        return builder;
    }
}
