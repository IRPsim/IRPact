package de.unileipzig.irpact.util.R.builder;

import de.unileipzig.irpact.util.R.builder.ggplot2.*;

import java.time.LocalDateTime;

/**
 * @author Daniel Abitz
 */
public final class RScriptFactory {

    public static final StringSettings SETTINGS = new StringSettings();

    private static final int NO_USAGE = -1;
    private static final int USAGE_ARG0 = 0;
    private static final int USAGE_ARG2 = 2;

    private static final String SEP = ";";

    private RScriptFactory() {
    }

    private static Comment getAutoGenerated() {
        return new Comment("automatic generated Rscript (" + LocalDateTime.now() + ")");
    }

    private static String getUsageComment(int usageFlag) {
        switch (usageFlag) {
            case USAGE_ARG0:
                return "usage: Rscript <scirpt name>";

            case USAGE_ARG2:
                return "usage: Rscript <script name> <input file> <output file>";

            case NO_USAGE:
            default:
                return null;
        }
    }

    private static Comment createUsageComment(int usageFlag) {
        String comment = getUsageComment(usageFlag);
        if(comment != null) {
            return new Comment(comment);
        } else {
            return null;
        }
    }

    private static RScriptBuilder newBuilder() {
        RScriptBuilder builder = new RScriptBuilder();
        builder.setSettings(SETTINGS);
        return builder;
    }

    //=========================
    //line chart
    //=========================

    public static RScriptBuilder lineChart0(
            String argX, String argY, String argGrp,
            String xlab, String ylab, String grplab) {
        return lineChart0(
                argX, argY, argGrp,
                null, null, null, null,
                xlab, ylab, grplab,
                USAGE_ARG2
        );
    }

    public static RScriptBuilder lineChart0(
            String argX, String argY, String argGrp,
            int height, int width, String units, int dpi,
            String xlab, String ylab, String grplab) {
        return lineChart0(
                argX, argY, argGrp,
                height, width, units, dpi,
                xlab, ylab, grplab,
                USAGE_ARG2
        );
    }

    public static RScriptBuilder lineChart0(
            String argX, String argY, String argGrp,
            Integer height, Integer width, String units, Integer dpi,
            String xlab, String ylab, String grplab,
            int usageFlag) {
        Comment autoComment = getAutoGenerated();
        Comment typeComment = new Comment("type: line chart v0");
        Comment usageComment = createUsageComment(usageFlag);

        Args args = new Args("args", 2);

        Library lib = new Library("ggplot2");

        ReadDotCsv csv = new ReadDotCsv("inputdata");
        csv.setFileName(args.getNamedIndex(1));
        csv.setHeader(true);
        csv.setSep(SEP);
        csv.setColClasses(Element.NUMERIC, Element.NUMERIC, Element.CHARACTER);

        Ggplot plot = new Ggplot();
        plot.setData(csv.getReturnName());
        plot.aes().setX(argX);
        plot.aes().setY(argY);
        plot.aes().setGroup(argGrp);
        plot.aes().setColour(argGrp);

        GeomLine geomLine = new GeomLine();

        Labs labs = new Labs();
        labs.setX(xlab);
        labs.setY(ylab);
        labs.setColour(grplab);

        Ggsave save = new Ggsave();
        save.setFileName(args.getNamedIndex(2));
        if(width != null) save.setWidth(width);
        if(height != null) save.setHeight(height);
        if(units != null) save.setUnits(units);
        if(dpi != null) save.setDpi(dpi);

        RScriptBuilder builder = newBuilder();

        builder.add(autoComment);
        builder.add(typeComment);
        if(usageComment != null) builder.add(usageComment);
        builder.newLine();
        builder.add(args);
        builder.newLine();
        builder.add(lib);
        builder.newLine();
        builder.add(csv);
        builder.addLinked(plot, geomLine, labs);
        builder.add(save);
        builder.devoff();

        return builder;
    }
    //=========================
    //interaction line chart
    //=========================

    public static RScriptBuilder interactionLineChart0(
            String argX, String argY, String argGrp, String argDistinct,
            String xLab, String yLab, String grpLab, String distrinctLab) {
        return interactionLineChart0(
                argX, argY, argGrp, argDistinct,
                null, null, null, null,
                xLab, yLab, grpLab, distrinctLab,
                USAGE_ARG2
        );
    }

    public static RScriptBuilder interactionLineChart0(
            String argX, String argY, String argGrp, String argDistinct,
            int height, int width, String units, int dpi,
            String xLab, String yLab, String grpLab, String distrinctLab) {
        return interactionLineChart0(
                argX, argY, argGrp,
                argDistinct, height, width, units,
                dpi, xLab, yLab, grpLab, distrinctLab,
                USAGE_ARG2
        );
    }

    public static RScriptBuilder interactionLineChart0(
            String argX, String argY, String argGrp, String argDistinct,
            Integer height, Integer width, String units, Integer dpi,
            String xLab, String yLab, String grpLab, String distrinctLab,
            int usageFlag) {
        Comment autoComment = getAutoGenerated();
        Comment typeComment = new Comment("type: interaction line chart v0");
        Comment usageComment = createUsageComment(usageFlag);

        Args args = new Args("args", 2);

        Library lib = new Library("ggplot2");

        ReadDotCsv csv = new ReadDotCsv("inputdata");
        csv.setFileName(args.getNamedIndex(1));
        csv.setHeader(true);
        csv.setSep(SEP);
        csv.setColClasses(Element.NUMERIC, Element.NUMERIC, Element.CHARACTER, Element.CHARACTER);

        Ggplot plot = new Ggplot();

        GeomLine geomLine = new GeomLine();
        geomLine.setData(csv.getReturnName());
        geomLine.aes().setX(argX);
        geomLine.aes().setY(argY);
        geomLine.aes().setGroupInteraction(argGrp, argDistinct);
        geomLine.aes().setColour(argGrp);
        geomLine.aes().setLinetype(argDistinct);

        Labs labs = new Labs();
        labs.setX(xLab);
        labs.setY(yLab);
        labs.setColour(grpLab);
        labs.setLinetype(distrinctLab);

        Ggsave save = new Ggsave();
        save.setFileName(args.getNamedIndex(2));
        if(width != null) save.setWidth(width);
        if(height != null) save.setHeight(height);
        if(units != null) save.setUnits(units);
        if(dpi != null) save.setDpi(dpi);

        RScriptBuilder builder = newBuilder();

        builder.add(autoComment);
        builder.add(typeComment);
        if(usageComment != null) builder.add(usageComment);
        builder.newLine();
        builder.add(args);
        builder.newLine();
        builder.add(lib);
        builder.newLine();
        builder.add(csv);
        builder.addLinked(plot, geomLine, labs);
        builder.add(save);
        builder.devoff();

        return builder;
    }

    public static RScriptBuilder interactionLineChart1(
            String argX, String argY, String argGrp, String argDistinct,
            String firstLinetype, String secondLineType,
            String xLab, String yLab, String grpLab, String distrinctLab) {
        return interactionLineChart1(
                argX, argY, argGrp, argDistinct,
                null, null, null, null,
                firstLinetype, secondLineType, xLab, yLab, grpLab, distrinctLab,
                USAGE_ARG2
        );
    }

    public static RScriptBuilder interactionLineChart1(
            String argX, String argY, String argGrp, String argDistinct,
            int height, int width, String units, int dpi,
            String firstLinetype, String secondLineType,
            String xLab, String yLab, String grpLab, String distrinctLab) {
        return interactionLineChart1(
                argX, argY, argGrp, argDistinct,
                height, width, units, dpi,
                firstLinetype, secondLineType, xLab, yLab, grpLab, distrinctLab,
                USAGE_ARG2
        );
    }

    public static RScriptBuilder interactionLineChart1(
            String argX, String argY, String argGrp, String argDistinct,
            Integer height, Integer width, String units, Integer dpi,
            String firstLinetype, String secondLineType,
            String xLab, String yLab, String grpLab, String distrinctLab,
            int usageFlag) {
        Comment autoComment = getAutoGenerated();
        Comment typeComment = new Comment("type: interaction line chart v1");
        Comment usageComment = createUsageComment(usageFlag);

        Args args = new Args("args", 2);

        Library lib = new Library("ggplot2");

        ReadDotCsv csv = new ReadDotCsv("inputdata");
        csv.setFileName(args.getNamedIndex(1));
        csv.setHeader(true);
        csv.setSep(SEP);
        csv.setColClasses(Element.NUMERIC, Element.NUMERIC, Element.CHARACTER, Element.CHARACTER);

        Ggplot plot = new Ggplot();

        GeomLine geomLine = new GeomLine();
        geomLine.setData(csv.getReturnName());
        geomLine.aes().setX(argX);
        geomLine.aes().setY(argY);
        geomLine.aes().setGroupInteraction(argGrp, argDistinct);
        geomLine.aes().setColour(argGrp);
        geomLine.aes().setLinetype(argDistinct);

        Labs labs = new Labs();
        labs.setX(xLab);
        labs.setY(yLab);
        labs.setColour(grpLab);
        labs.setLinetype(distrinctLab);

        ScaleLinetypeManual scaleLinetypes = new ScaleLinetypeManual();
        scaleLinetypes.setValues(firstLinetype, secondLineType);

        Ggsave save = new Ggsave();
        save.setFileName(args.getNamedIndex(2));
        if(width != null) save.setWidth(width);
        if(height != null) save.setHeight(height);
        if(units != null) save.setUnits(units);
        if(dpi != null) save.setDpi(dpi);

        RScriptBuilder builder = newBuilder();

        builder.add(autoComment);
        builder.add(typeComment);
        if(usageComment != null) builder.add(usageComment);
        builder.newLine();
        builder.add(args);
        builder.newLine();
        builder.add(lib);
        builder.newLine();
        builder.add(csv);
        builder.addLinked(plot, geomLine, scaleLinetypes, labs);
        builder.add(save);
        builder.devoff();

        return builder;
    }

    //=========================
    //stacked bar chart
    //=========================

    public static RScriptBuilder stackedBarChart0(
            String argX, String argY, String argFill,
            String xLab, String yLab, String fillLab) {
        return stackedBarChart0(
                argX, argY, argFill,
                null, null, null, null,
                xLab, yLab, fillLab,
                USAGE_ARG2
        );
    }

    public static RScriptBuilder stackedBarChart0(
            String argX, String argY, String argFill,
            int height, int width, String units, int dpi,
            String xLab, String yLab, String fillLab) {
        return stackedBarChart0(
                argX, argY, argFill,
                height, width, units, dpi,
                xLab, yLab, fillLab,
                USAGE_ARG2
        );
    }

    public static RScriptBuilder stackedBarChart0(
            String argX, String argY, String argFill,
            Integer height, Integer width, String units, Integer dpi,
            String xLab, String yLab, String fillLab,
            int usageFlag) {
        Comment autoComment = getAutoGenerated();
        Comment typeComment = new Comment("type: stacked bar chart v0");
        Comment usageComment = createUsageComment(usageFlag);

        Args args = new Args("args", 2);

        Library lib = new Library("ggplot2");

        ReadDotCsv csv = new ReadDotCsv("inputdata");
        csv.setFileName(args.getNamedIndex(1));
        csv.setHeader(true);
        csv.setSep(SEP);
        csv.setColClasses(Element.NUMERIC, Element.CHARACTER, Element.NUMERIC);

        Ggplot plot = new Ggplot();
        plot.setData(csv.getReturnName());
        plot.aes().setX(argX);
        plot.aes().setY(argY);
        plot.aes().setFill(argFill);

        GeomBar geomBar = new GeomBar();
        geomBar.setPosition(Element.STACK);
        geomBar.setStat(Element.IDENTITY);

        Labs labs = new Labs();
        labs.setX(xLab);
        labs.setY(yLab);
        labs.setFill(fillLab);

        Ggsave save = new Ggsave();
        save.setFileName(args.getNamedIndex(2));
        if(width != null) save.setWidth(width);
        if(height != null) save.setHeight(height);
        if(units != null) save.setUnits(units);
        if(dpi != null) save.setDpi(dpi);

        RScriptBuilder builder = newBuilder();

        builder.add(autoComment);
        builder.add(typeComment);
        if(usageComment != null) builder.add(usageComment);
        builder.newLine();
        builder.add(args);
        builder.newLine();
        builder.add(lib);
        builder.newLine();
        builder.add(csv);
        builder.addLinked(plot, geomBar, labs);
        builder.add(save);
        builder.devoff();

        return builder;
    }
}
